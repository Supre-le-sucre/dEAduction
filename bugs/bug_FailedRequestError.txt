/usr/local/opt/python@3.7/bin/python3.7 "/Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pydev/pydevconsole.py" --mode=client --port=60216
import sys; print('Python %s on %s' % (sys.version, sys.platform))
sys.path.extend(['/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction'])
PyDev console: starting.
Python 3.7.8 (default, Aug  7 2020, 14:52:29)
[Clang 9.0.0 (clang-900.0.39.2)] on darwin
import os
... os.environ['DEADUCTION_USE_COLOR'] = '1'
... runfile('/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/src/deaduction/dui/__main__.py', wdir='/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/')
...
INFO      deaduction.dui.launcher: Selected course: /Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/tests/lean_files/courses/exercises_theorie_des_ensembles.lean
INFO      Course initialisation: Parsing file /Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/tests/lean_files/courses/exercises_theorie_des_ensembles.lean
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' Théorie des ensembles'}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' egalité de deux ensembles'}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' Double inclusion'}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' Intersection de deux ensembles'}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': " Intersection d'une famille d'ensembles quelconque"}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' Union de deux ensembles'}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': " Union d'une famille d'ensembles quelconque"}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' Intersection avec une union', 'Description': " L'intersection est distributive par rapport à l'union", 'Tools->Logic': ' $ALL -negate', 'Tools->ProofTechniques': ' $ALL -contradiction', 'Tools->Definitions': ' $UNTIL_NOW -union_quelconque_ensembles -intersection_quelconque_ensembles', 'Tools->Theorems': ' double_inclusion', 'ExpectedVarsNumber': ' X=3, A=1, B=1'}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' Union avec une intersection', 'Description': " L'union est distributive par rapport à l'intersection"}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' Complémentaire'}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' Complémentaire du complémentaire', 'Description': ' Tout ensemble est égal au complémentaire de son complémentaire'}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': " Complémentaire d'union I", 'Description': " Le complémentaire de l'union de deux ensembles égale l'intersection des complémentaires"}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': " Complémentaire d'union II", 'Description': " Le complémentaire d'une réunion quelconque égale l'intersection des complémentaires"}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' Le passage au complémentaire renverse les inclusions, implication', 'Description': ' Si A est inclus dans B, alors le complémentaire de A contient le complémentaire de B'}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' Le passage au complémentaire renverse les inclusions, équivalence', 'Description': ' Si A est inclus dans B, alors le complémentaire de A contient le complémentaire de B'}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' Applications et opérations ensemblistes'}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' Image réciproque du complémentaire, inclusion'}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' Image réciproque du complémentaire, égalité'}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' Injections et surjections'}}
DEBUG     Course initialisation: course history: [('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('open_namespace', {'name': 'theorie_des_ensembles', 'pretty_name': ' Théorie des ensembles'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('definition', {'lean_name': 'definition.inclusion', 'lean_statement': '{A B : set X} : A ⊆ B ↔ ∀ {x:X}, x ∈ A → x ∈ B ', 'PrettyName': 'Inclusion'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('definition', {'PrettyName': ' egalité de deux ensembles', 'lean_name': 'definition.egalite_deux_ensembles', 'lean_statement': "{A A' : set X} :\n(A = A') ↔ ( ∀ x, x ∈ A ↔ x ∈ A' ) "}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('theorem', {'PrettyName': ' Double inclusion', 'lean_name': 'theorem.double_inclusion', 'lean_statement': "(A A' : set X) :\n(A ⊆ A' ∧ A' ⊆ A) → A = A' "}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('open_namespace', {'name': 'unions_et_intersections', 'pretty_name': 'Unions et intersections'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('definition', {'PrettyName': ' Intersection de deux ensembles', 'lean_name': 'definition.intersection_deux_ensembles', 'lean_statement': '{A B : set X} {x : X} :\nx ∈ A ∩ B ↔ ( x ∈ A ∧ x ∈ B) '}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('definition', {'PrettyName': " Intersection d'une famille d'ensembles quelconque", 'lean_name': 'definition.intersection_quelconque_ensembles', 'lean_statement': '{I : Type} {E : I → set X}  {x : X} :\n(x ∈ set.Inter (λ i, E i)) ↔ (∀ i:I, x ∈ E i) '}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('definition', {'PrettyName': ' Union de deux ensembles', 'lean_name': 'definition.union_deux_ensembles', 'lean_statement': '{A : set X} {B : set X} {x : X} :\nx ∈ A ∪ B ↔ ( x ∈ A ∨ x ∈ B) '}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('definition', {'PrettyName': " Union d'une famille d'ensembles quelconque", 'lean_name': 'definition.union_quelconque_ensembles', 'lean_statement': '{I : Type} {E : I → set X}  {x : X} :\n(x ∈ set.Union (λ i, E i)) ↔ (∃ i:I, x ∈ E i) '}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'PrettyName': ' Intersection avec une union', 'Description': " L'intersection est distributive par rapport à l'union", 'Tools->Logic': ' $ALL -negate', 'Tools->ProofTechniques': ' $ALL -contradiction', 'Tools->Definitions': ' $UNTIL_NOW -union_quelconque_ensembles -intersection_quelconque_ensembles', 'Tools->Theorems': ' double_inclusion', 'ExpectedVarsNumber': ' X=3, A=1, B=1', 'lean_name': 'exercise.union_distributive_inter', 'lean_statement': ': A ∩ (B ∪ C)  = (A ∩ B) ∪ (A ∩ C) '}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'PrettyName': ' Union avec une intersection', 'Description': " L'union est distributive par rapport à l'intersection", 'lean_name': 'exercise.inter_distributive_union', 'lean_statement': ': A ∪ (B ∩ C)  = (A ∪ B) ∩ (A ∪ C) '}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('close_namespace', {'name': 'unions_et_intersections'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('open_namespace', {'name': 'complementaire', 'pretty_name': 'Complementaire'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('definition', {'PrettyName': ' Complémentaire', 'lean_name': 'definition.complement', 'lean_statement': '{A : set X} {x : X} : x ∈ set.compl A ↔ x ∉ A '}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'PrettyName': ' Complémentaire du complémentaire', 'Description': ' Tout ensemble est égal au complémentaire de son complémentaire', 'lean_name': 'exercise.complement_complement', 'lean_statement': ': (set.compl (set.compl A)) = A '}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'PrettyName': " Complémentaire d'union I", 'Description': " Le complémentaire de l'union de deux ensembles égale l'intersection des complémentaires", 'lean_name': 'exercise.complement_union_deux', 'lean_statement': ':\nset.compl (A ∪ B) = (set.compl A) ∩ (set.compl B) '}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'PrettyName': " Complémentaire d'union II", 'Description': " Le complémentaire d'une réunion quelconque égale l'intersection des complémentaires", 'lean_name': 'exercise.complement_union_quelconque', 'lean_statement': ':\nset.compl (set.Union (λ i, E i)) = set.Inter (λ i, set.compl (E i)) '}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'PrettyName': ' Le passage au complémentaire renverse les inclusions, implication', 'Description': ' Si A est inclus dans B, alors le complémentaire de A contient le complémentaire de B', 'lean_name': 'exercise.inclusion_complement_I', 'lean_statement': ':\nA ⊆ B → set.compl B ⊆ set.compl A\n'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'PrettyName': ' Le passage au complémentaire renverse les inclusions, équivalence', 'Description': ' Si A est inclus dans B, alors le complémentaire de A contient le complémentaire de B', 'lean_name': 'exercise.inclusion_complement_II', 'lean_statement': ':\nA ⊆ B ↔ set.compl B ⊆ set.compl A\n'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('close_namespace', {'name': 'complementaire'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('open_namespace', {'name': 'applications_I', 'pretty_name': ' Applications et opérations ensemblistes'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('definition', {'lean_name': 'definition.image_directe', 'lean_statement': "(y : Y) : y ∈ f '' A ↔ ∃ x : X, x ∈ A ∧  f x = y ", 'PrettyName': 'Image directe'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('definition', {'lean_name': 'definition.image_reciproque', 'lean_statement': "(x:X) : x ∈ f  ⁻¹' B ↔ f(x) ∈ B ", 'PrettyName': 'Image reciproque'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.image_de_reciproque', 'lean_statement': ": f '' (f ⁻¹' B)  ⊆ B ", 'PrettyName': 'Image de reciproque'}), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.reciproque_de_image', 'lean_statement': ": A ⊆ f ⁻¹' (f '' A) ", 'PrettyName': 'Reciproque de image'}), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.image_reciproque_inter', 'lean_statement': ":  f ⁻¹'  (B∩B') = f ⁻¹'  (B) ∩ f ⁻¹'  (B') ", 'PrettyName': 'Image reciproque inter'}), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.image_reciproque_union', 'lean_statement': ": f ⁻¹' (B ∪ B') = f ⁻¹' B ∪ f ⁻¹' B'\n", 'PrettyName': 'Image reciproque union'}), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.image_reciproque_inter_quelconque', 'lean_statement': ":\n(f ⁻¹'  (set.Inter (λ i, F i))) = set.Inter (λ i, f ⁻¹' (F i))\n", 'PrettyName': 'Image reciproque inter quelconque'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.image_inter_inclus_inter_images', 'lean_statement': ":\nf '' (A∩A') ⊆ f '' (A) ∩ f '' (A')\n", 'PrettyName': 'Image inter inclus inter images'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'PrettyName': ' Image réciproque du complémentaire, inclusion', 'lean_name': 'exercise.reciproque_complementaire_I', 'lean_statement': ":\nf ⁻¹' (set.compl B) ⊆ set.compl (f ⁻¹' B)\n"}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'PrettyName': ' Image réciproque du complémentaire, égalité', 'lean_name': 'exercise.reciproque_complementaire_II', 'lean_statement': ":\nf ⁻¹' (set.compl B) = set.compl (f ⁻¹' B)\n"}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('close_namespace', {'name': 'applications_I'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('open_namespace', {'name': 'applications_II', 'pretty_name': ' Injections et surjections'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('open_namespace', {'name': 'definitions', 'pretty_name': 'Definitions'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('definition', {'lean_name': 'definition.injectivite', 'lean_statement': ':\ninjective f ↔ ∀ x y : X, (f x = f y → x = y)\n', 'PrettyName': 'Injectivite'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('definition', {'lean_name': 'definition.surjectivite', 'lean_statement': ':\nsurjective f ↔ ∀ y : Y, ∃ x : X, f x = y\n', 'PrettyName': 'Surjectivite'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('definition', {'lean_name': 'definition.composition', 'lean_statement': ':\n∀ x:X, composition g f x = g (f x)\n', 'PrettyName': 'Composition'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('definition', {'lean_name': 'definition.egalite_fonctions', 'lean_statement': "(f' : X → Y) :\nf = f' ↔ ∀ x, f x = f' x ", 'PrettyName': 'Egalite fonctions'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('definition', {'lean_name': 'definition.Identite', 'lean_statement': '(f₀: X → X) :\nf₀ = Identite ↔ ∀ x, f₀ x = x ', 'PrettyName': 'Identite'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('close_namespace', {'name': 'definitions'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('open_namespace', {'name': 'inverses', 'pretty_name': 'Inverses'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.injective_ssi_inverse_gauche', 'lean_statement': ': (injective f) ↔\n∃ F: Y → X, (composition F f) = Identite ', 'PrettyName': 'Injective ssi inverse gauche'}), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.surjective_ssi_inverse_droite', 'lean_statement': ': (surjective f) ↔\n∃ F: Y → X, (composition f F) = Identite ', 'PrettyName': 'Surjective ssi inverse droite'}), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('close_namespace', {'name': 'inverses'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('open_namespace', {'name': 'composition', 'pretty_name': 'Composition'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.composition_injections', 'lean_statement': '(H1 : injective (λx:X, f x)) (H2 : injective g) :\ninjective (composition g f)\n', 'PrettyName': 'Composition injections'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.composition_surjections', 'lean_statement': '(H1 : surjective f) (H2 : surjective g) :\nsurjective (composition g f)\n', 'PrettyName': 'Composition surjections'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.injective_si_coompo_injective', 'lean_statement': '(H1 : injective (composition g f)) :\ninjective f\n', 'PrettyName': 'Injective si coompo injective'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.surjective_si_coompo_surjective', 'lean_statement': '(H1 : surjective (composition g f)) :\nsurjective g\n', 'PrettyName': 'Surjective si coompo surjective'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('close_namespace', {'name': 'composition'}), ('end_of_line', None), ('end_of_line', None), ('close_namespace', {'name': 'applications_II'}), ('end_of_line', None), ('end_of_line', None), ('close_namespace', {'name': 'theorie_des_ensembles'}), ('end_of_line', None), ('end_of_line', None), ('close_namespace', {'name': 'course'})]
DEBUG     Course initialisation: Parsing line 2
DEBUG     Course initialisation: Parsing line 3
DEBUG     Course initialisation: Parsing line 4
DEBUG     Course initialisation: Parsing line 5
DEBUG     Course initialisation: Parsing line 6
DEBUG     Course initialisation: Parsing line 7
DEBUG     Course initialisation: Parsing line 8
DEBUG     Course initialisation: Parsing line 9
DEBUG     Course initialisation: Parsing line 10
DEBUG     Course initialisation: Parsing line 11
DEBUG     Course initialisation: Parsing line 12
DEBUG     Course initialisation: Parsing line 13
DEBUG     Course initialisation: Parsing line 14
DEBUG     Course initialisation: Parsing line 15
DEBUG     Course initialisation: Parsing line 16
DEBUG     Course initialisation: Parsing line 17
DEBUG     Course initialisation: Parsing line 18
DEBUG     Course initialisation: Parsing line 19
DEBUG     Course initialisation: Parsing line 20
DEBUG     Course initialisation: Parsing line 21
DEBUG     Course initialisation: Parsing line 22
DEBUG     Course initialisation: Parsing line 23
DEBUG     Course initialisation: Parsing line 24
DEBUG     Course initialisation: Parsing line 25
DEBUG     Course initialisation: Parsing line 26
DEBUG     Course initialisation: Parsing line 27
DEBUG     Course initialisation: namespace theorie_des_ensembles
DEBUG     Course initialisation: Parsing line 28
DEBUG     Course initialisation: Parsing line 29
DEBUG     Course initialisation: Parsing line 30
DEBUG     Course initialisation: Parsing line 31
DEBUG     Course initialisation: Parsing line 32
DEBUG     Course initialisation: Parsing line 33
DEBUG     Course initialisation: Parsing line 34
DEBUG     Course initialisation: Parsing line 35
DEBUG     Course initialisation: Parsing line 36
DEBUG     Course initialisation: Parsing line 37
INFO      Course initialisation: creating definition from data {'lean_name': 'theorie_des_ensembles.definition.inclusion', 'lean_statement': '{A B : set X} : A ⊆ B ↔ ∀ {x:X}, x ∈ A → x ∈ B ', 'PrettyName': 'Inclusion', 'lean_line': 37, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: Parsing line 38
DEBUG     Course initialisation: Parsing line 39
DEBUG     Course initialisation: Parsing line 40
INFO      Course initialisation: creating definition from data {'PrettyName': ' egalité de deux ensembles', 'lean_name': 'theorie_des_ensembles.definition.egalite_deux_ensembles', 'lean_statement': "{A A' : set X} :\n(A = A') ↔ ( ∀ x, x ∈ A ↔ x ∈ A' ) ", 'lean_line': 40, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: Parsing line 41
DEBUG     Course initialisation: Parsing line 42
DEBUG     Course initialisation: Parsing line 43
DEBUG     Course initialisation: Parsing line 44
DEBUG     Course initialisation: Parsing line 45
DEBUG     Course initialisation: Parsing line 46
DEBUG     Course initialisation: Parsing line 47
DEBUG     Course initialisation: Parsing line 48
INFO      Course initialisation: creating theorem from data {'PrettyName': ' Double inclusion', 'lean_name': 'theorie_des_ensembles.theorem.double_inclusion', 'lean_statement': "(A A' : set X) :\n(A ⊆ A' ∧ A' ⊆ A) → A = A' ", 'lean_line': 48, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: Parsing line 49
DEBUG     Course initialisation: Parsing line 50
DEBUG     Course initialisation: Parsing line 51
DEBUG     Course initialisation: Parsing line 52
DEBUG     Course initialisation: Parsing line 53
DEBUG     Course initialisation: Parsing line 54
DEBUG     Course initialisation: Parsing line 55
DEBUG     Course initialisation: Parsing line 56
DEBUG     Course initialisation: Parsing line 57
DEBUG     Course initialisation: Parsing line 58
DEBUG     Course initialisation: Parsing line 59
DEBUG     Course initialisation: Parsing line 60
DEBUG     Course initialisation: Parsing line 61
DEBUG     Course initialisation: namespace theorie_des_ensembles.unions_et_intersections
DEBUG     Course initialisation: Parsing line 62
DEBUG     Course initialisation: Parsing line 63
DEBUG     Course initialisation: Parsing line 64
DEBUG     Course initialisation: Parsing line 65
DEBUG     Course initialisation: Parsing line 66
DEBUG     Course initialisation: Parsing line 67
DEBUG     Course initialisation: Parsing line 68
INFO      Course initialisation: creating definition from data {'PrettyName': ' Intersection de deux ensembles', 'lean_name': 'theorie_des_ensembles.unions_et_intersections.definition.intersection_deux_ensembles', 'lean_statement': '{A B : set X} {x : X} :\nx ∈ A ∩ B ↔ ( x ∈ A ∧ x ∈ B) ', 'lean_line': 68, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: Parsing line 69
DEBUG     Course initialisation: Parsing line 70
DEBUG     Course initialisation: Parsing line 71
DEBUG     Course initialisation: Parsing line 72
DEBUG     Course initialisation: Parsing line 73
DEBUG     Course initialisation: Parsing line 74
DEBUG     Course initialisation: Parsing line 75
DEBUG     Course initialisation: Parsing line 76
INFO      Course initialisation: creating definition from data {'PrettyName': " Intersection d'une famille d'ensembles quelconque", 'lean_name': 'theorie_des_ensembles.unions_et_intersections.definition.intersection_quelconque_ensembles', 'lean_statement': '{I : Type} {E : I → set X}  {x : X} :\n(x ∈ set.Inter (λ i, E i)) ↔ (∀ i:I, x ∈ E i) ', 'lean_line': 76, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: Parsing line 77
DEBUG     Course initialisation: Parsing line 78
DEBUG     Course initialisation: Parsing line 79
DEBUG     Course initialisation: Parsing line 80
DEBUG     Course initialisation: Parsing line 81
DEBUG     Course initialisation: Parsing line 82
DEBUG     Course initialisation: Parsing line 83
DEBUG     Course initialisation: Parsing line 84
INFO      Course initialisation: creating definition from data {'PrettyName': ' Union de deux ensembles', 'lean_name': 'theorie_des_ensembles.unions_et_intersections.definition.union_deux_ensembles', 'lean_statement': '{A : set X} {B : set X} {x : X} :\nx ∈ A ∪ B ↔ ( x ∈ A ∨ x ∈ B) ', 'lean_line': 84, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: Parsing line 85
DEBUG     Course initialisation: Parsing line 86
DEBUG     Course initialisation: Parsing line 87
DEBUG     Course initialisation: Parsing line 88
DEBUG     Course initialisation: Parsing line 89
DEBUG     Course initialisation: Parsing line 90
DEBUG     Course initialisation: Parsing line 91
DEBUG     Course initialisation: Parsing line 92
INFO      Course initialisation: creating definition from data {'PrettyName': " Union d'une famille d'ensembles quelconque", 'lean_name': 'theorie_des_ensembles.unions_et_intersections.definition.union_quelconque_ensembles', 'lean_statement': '{I : Type} {E : I → set X}  {x : X} :\n(x ∈ set.Union (λ i, E i)) ↔ (∃ i:I, x ∈ E i) ', 'lean_line': 92, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: Parsing line 93
DEBUG     Course initialisation: Parsing line 94
DEBUG     Course initialisation: Parsing line 95
DEBUG     Course initialisation: Parsing line 96
DEBUG     Course initialisation: Parsing line 97
DEBUG     Course initialisation: Parsing line 98
DEBUG     Course initialisation: Parsing line 99
DEBUG     Course initialisation: Parsing line 100
DEBUG     Course initialisation: Parsing line 101
DEBUG     Course initialisation: Parsing line 102
DEBUG     Course initialisation: Parsing line 103
DEBUG     Course initialisation: Parsing line 104
INFO      Course initialisation: creating exercise from data {'PrettyName': ' Intersection avec une union', 'Description': " L'intersection est distributive par rapport à l'union", 'Tools->Logic': ' $ALL -negate', 'Tools->ProofTechniques': ' $ALL -contradiction', 'Tools->Definitions': ' $UNTIL_NOW -union_quelconque_ensembles -intersection_quelconque_ensembles', 'Tools->Theorems': ' double_inclusion', 'ExpectedVarsNumber': ' X=3, A=1, B=1', 'lean_name': 'theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter', 'lean_statement': ': A ∩ (B ∪ C)  = (A ∩ B) ∪ (A ∩ C) ', 'lean_line': 104, 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Magic': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions,  $UNTIL_NOW -union_quelconque_ensembles -intersection_quelconque_ensembles
DEBUG     Course initialisation: processing data in Tools->Theorems,  double_inclusion
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic,  $ALL -negate
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply', '-negate']
DEBUG     Course initialisation: list 3: ['and', 'or', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques,  $ALL -contradiction
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption', '-contradiction']
WARNING   Course initialisation: Cannot remove item contradiction from list
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 105
DEBUG     Course initialisation: Parsing line 106
DEBUG     Course initialisation: Parsing line 107
DEBUG     Course initialisation: Parsing line 108
DEBUG     Course initialisation: Parsing line 109
DEBUG     Course initialisation: Parsing line 110
DEBUG     Course initialisation: Parsing line 111
DEBUG     Course initialisation: Parsing line 112
DEBUG     Course initialisation: Parsing line 113
DEBUG     Course initialisation: Parsing line 114
DEBUG     Course initialisation: Parsing line 115
DEBUG     Course initialisation: Parsing line 116
DEBUG     Course initialisation: Parsing line 117
DEBUG     Course initialisation: Parsing line 118
DEBUG     Course initialisation: Parsing line 119
DEBUG     Course initialisation: Parsing line 120
DEBUG     Course initialisation: Parsing line 121
DEBUG     Course initialisation: Parsing line 122
DEBUG     Course initialisation: Parsing line 123
DEBUG     Course initialisation: Parsing line 124
DEBUG     Course initialisation: Parsing line 125
DEBUG     Course initialisation: Parsing line 126
INFO      Course initialisation: creating exercise from data {'PrettyName': ' Union avec une intersection', 'Description': " L'union est distributive par rapport à l'intersection", 'lean_name': 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union', 'lean_statement': ': A ∪ (B ∩ C)  = (A ∪ B) ∩ (A ∪ C) ', 'lean_line': 126, 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 127
DEBUG     Course initialisation: Parsing line 128
DEBUG     Course initialisation: Parsing line 129
DEBUG     Course initialisation: Parsing line 130
DEBUG     Course initialisation: Parsing line 131
DEBUG     Course initialisation: Parsing line 132
DEBUG     Course initialisation: Parsing line 133
DEBUG     Course initialisation: Parsing line 134
DEBUG     Course initialisation: Parsing line 135
DEBUG     Course initialisation: Parsing line 136
DEBUG     Course initialisation: Parsing line 137
DEBUG     Course initialisation: closing namespace unions_et_intersections
DEBUG     Course initialisation: Parsing line 138
DEBUG     Course initialisation: Parsing line 139
DEBUG     Course initialisation: Parsing line 140
DEBUG     Course initialisation: Parsing line 141
DEBUG     Course initialisation: Parsing line 142
DEBUG     Course initialisation: Parsing line 143
DEBUG     Course initialisation: namespace theorie_des_ensembles.complementaire
DEBUG     Course initialisation: Parsing line 144
DEBUG     Course initialisation: Parsing line 145
DEBUG     Course initialisation: Parsing line 146
DEBUG     Course initialisation: Parsing line 147
DEBUG     Course initialisation: Parsing line 148
DEBUG     Course initialisation: Parsing line 149
DEBUG     Course initialisation: Parsing line 150
DEBUG     Course initialisation: Parsing line 151
DEBUG     Course initialisation: Parsing line 152
INFO      Course initialisation: creating definition from data {'PrettyName': ' Complémentaire', 'lean_name': 'theorie_des_ensembles.complementaire.definition.complement', 'lean_statement': '{A : set X} {x : X} : x ∈ set.compl A ↔ x ∉ A ', 'lean_line': 152, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: Parsing line 153
DEBUG     Course initialisation: Parsing line 154
DEBUG     Course initialisation: Parsing line 155
DEBUG     Course initialisation: Parsing line 156
DEBUG     Course initialisation: Parsing line 157
DEBUG     Course initialisation: Parsing line 158
DEBUG     Course initialisation: Parsing line 159
DEBUG     Course initialisation: Parsing line 160
DEBUG     Course initialisation: Parsing line 161
DEBUG     Course initialisation: Parsing line 162
DEBUG     Course initialisation: Parsing line 163
DEBUG     Course initialisation: Parsing line 164
DEBUG     Course initialisation: Parsing line 165
DEBUG     Course initialisation: Parsing line 166
INFO      Course initialisation: creating exercise from data {'PrettyName': ' Complémentaire du complémentaire', 'Description': ' Tout ensemble est égal au complémentaire de son complémentaire', 'lean_name': 'theorie_des_ensembles.complementaire.exercise.complement_complement', 'lean_statement': ': (set.compl (set.compl A)) = A ', 'lean_line': 166, 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 167
DEBUG     Course initialisation: Parsing line 168
DEBUG     Course initialisation: Parsing line 169
DEBUG     Course initialisation: Parsing line 170
DEBUG     Course initialisation: Parsing line 171
DEBUG     Course initialisation: Parsing line 172
DEBUG     Course initialisation: Parsing line 173
DEBUG     Course initialisation: Parsing line 174
DEBUG     Course initialisation: Parsing line 175
DEBUG     Course initialisation: Parsing line 176
DEBUG     Course initialisation: Parsing line 177
INFO      Course initialisation: creating exercise from data {'PrettyName': " Complémentaire d'union I", 'Description': " Le complémentaire de l'union de deux ensembles égale l'intersection des complémentaires", 'lean_name': 'theorie_des_ensembles.complementaire.exercise.complement_union_deux', 'lean_statement': ':\nset.compl (A ∪ B) = (set.compl A) ∩ (set.compl B) ', 'lean_line': 177, 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 178
DEBUG     Course initialisation: Parsing line 179
DEBUG     Course initialisation: Parsing line 180
DEBUG     Course initialisation: Parsing line 181
DEBUG     Course initialisation: Parsing line 182
DEBUG     Course initialisation: Parsing line 183
DEBUG     Course initialisation: Parsing line 184
DEBUG     Course initialisation: Parsing line 185
DEBUG     Course initialisation: Parsing line 186
DEBUG     Course initialisation: Parsing line 187
DEBUG     Course initialisation: Parsing line 188
DEBUG     Course initialisation: Parsing line 189
INFO      Course initialisation: creating exercise from data {'PrettyName': " Complémentaire d'union II", 'Description': " Le complémentaire d'une réunion quelconque égale l'intersection des complémentaires", 'lean_name': 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque', 'lean_statement': ':\nset.compl (set.Union (λ i, E i)) = set.Inter (λ i, set.compl (E i)) ', 'lean_line': 189, 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 190
DEBUG     Course initialisation: Parsing line 191
DEBUG     Course initialisation: Parsing line 192
DEBUG     Course initialisation: Parsing line 193
DEBUG     Course initialisation: Parsing line 194
DEBUG     Course initialisation: Parsing line 195
DEBUG     Course initialisation: Parsing line 196
DEBUG     Course initialisation: Parsing line 197
DEBUG     Course initialisation: Parsing line 198
DEBUG     Course initialisation: Parsing line 199
DEBUG     Course initialisation: Parsing line 200
DEBUG     Course initialisation: Parsing line 201
DEBUG     Course initialisation: Parsing line 202
INFO      Course initialisation: creating exercise from data {'PrettyName': ' Le passage au complémentaire renverse les inclusions, implication', 'Description': ' Si A est inclus dans B, alors le complémentaire de A contient le complémentaire de B', 'lean_name': 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I', 'lean_statement': ':\nA ⊆ B → set.compl B ⊆ set.compl A\n', 'lean_line': 202, 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 203
DEBUG     Course initialisation: Parsing line 204
DEBUG     Course initialisation: Parsing line 205
DEBUG     Course initialisation: Parsing line 206
DEBUG     Course initialisation: Parsing line 207
DEBUG     Course initialisation: Parsing line 208
DEBUG     Course initialisation: Parsing line 209
DEBUG     Course initialisation: Parsing line 210
DEBUG     Course initialisation: Parsing line 211
DEBUG     Course initialisation: Parsing line 212
DEBUG     Course initialisation: Parsing line 213
DEBUG     Course initialisation: Parsing line 214
DEBUG     Course initialisation: Parsing line 215
INFO      Course initialisation: creating exercise from data {'PrettyName': ' Le passage au complémentaire renverse les inclusions, équivalence', 'Description': ' Si A est inclus dans B, alors le complémentaire de A contient le complémentaire de B', 'lean_name': 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II', 'lean_statement': ':\nA ⊆ B ↔ set.compl B ⊆ set.compl A\n', 'lean_line': 215, 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 216
DEBUG     Course initialisation: Parsing line 217
DEBUG     Course initialisation: Parsing line 218
DEBUG     Course initialisation: Parsing line 219
DEBUG     Course initialisation: Parsing line 220
DEBUG     Course initialisation: Parsing line 221
DEBUG     Course initialisation: Parsing line 222
DEBUG     Course initialisation: Parsing line 223
DEBUG     Course initialisation: Parsing line 224
DEBUG     Course initialisation: Parsing line 225
DEBUG     Course initialisation: Parsing line 226
DEBUG     Course initialisation: Parsing line 227
DEBUG     Course initialisation: Parsing line 228
DEBUG     Course initialisation: Parsing line 229
DEBUG     Course initialisation: Parsing line 230
DEBUG     Course initialisation: closing namespace complementaire
DEBUG     Course initialisation: Parsing line 231
DEBUG     Course initialisation: Parsing line 232
DEBUG     Course initialisation: Parsing line 233
DEBUG     Course initialisation: Parsing line 234
DEBUG     Course initialisation: Parsing line 235
DEBUG     Course initialisation: Parsing line 236
DEBUG     Course initialisation: Parsing line 237
DEBUG     Course initialisation: Parsing line 238
DEBUG     Course initialisation: Parsing line 239
DEBUG     Course initialisation: Parsing line 240
DEBUG     Course initialisation: Parsing line 241
DEBUG     Course initialisation: Parsing line 242
DEBUG     Course initialisation: namespace theorie_des_ensembles.applications_I
DEBUG     Course initialisation: Parsing line 243
DEBUG     Course initialisation: Parsing line 244
DEBUG     Course initialisation: Parsing line 245
DEBUG     Course initialisation: Parsing line 246
DEBUG     Course initialisation: Parsing line 247
DEBUG     Course initialisation: Parsing line 248
DEBUG     Course initialisation: Parsing line 249
DEBUG     Course initialisation: Parsing line 250
DEBUG     Course initialisation: Parsing line 251
DEBUG     Course initialisation: Parsing line 252
DEBUG     Course initialisation: Parsing line 253
DEBUG     Course initialisation: Parsing line 254
DEBUG     Course initialisation: Parsing line 255
DEBUG     Course initialisation: Parsing line 256
DEBUG     Course initialisation: Parsing line 257
DEBUG     Course initialisation: Parsing line 258
DEBUG     Course initialisation: Parsing line 259
DEBUG     Course initialisation: Parsing line 260
DEBUG     Course initialisation: Parsing line 261
DEBUG     Course initialisation: Parsing line 262
DEBUG     Course initialisation: Parsing line 263
DEBUG     Course initialisation: Parsing line 264
DEBUG     Course initialisation: Parsing line 265
INFO      Course initialisation: creating definition from data {'lean_name': 'theorie_des_ensembles.applications_I.definition.image_directe', 'lean_statement': "(y : Y) : y ∈ f '' A ↔ ∃ x : X, x ∈ A ∧  f x = y ", 'PrettyName': 'Image directe', 'lean_line': 265, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: Parsing line 266
DEBUG     Course initialisation: Parsing line 267
DEBUG     Course initialisation: Parsing line 268
DEBUG     Course initialisation: Parsing line 269
DEBUG     Course initialisation: Parsing line 270
DEBUG     Course initialisation: Parsing line 271
INFO      Course initialisation: creating definition from data {'lean_name': 'theorie_des_ensembles.applications_I.definition.image_reciproque', 'lean_statement': "(x:X) : x ∈ f  ⁻¹' B ↔ f(x) ∈ B ", 'PrettyName': 'Image reciproque', 'lean_line': 271, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: Parsing line 272
DEBUG     Course initialisation: Parsing line 273
DEBUG     Course initialisation: Parsing line 274
DEBUG     Course initialisation: Parsing line 275
DEBUG     Course initialisation: Parsing line 276
DEBUG     Course initialisation: Parsing line 277
DEBUG     Course initialisation: Parsing line 278
DEBUG     Course initialisation: Parsing line 279
DEBUG     Course initialisation: Parsing line 280
DEBUG     Course initialisation: Parsing line 281
INFO      Course initialisation: creating exercise from data {'lean_name': 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque', 'lean_statement': ": f '' (f ⁻¹' B)  ⊆ B ", 'PrettyName': 'Image de reciproque', 'lean_line': 281, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 282
DEBUG     Course initialisation: Parsing line 283
DEBUG     Course initialisation: Parsing line 284
DEBUG     Course initialisation: Parsing line 285
DEBUG     Course initialisation: Parsing line 286
INFO      Course initialisation: creating exercise from data {'lean_name': 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image', 'lean_statement': ": A ⊆ f ⁻¹' (f '' A) ", 'PrettyName': 'Reciproque de image', 'lean_line': 286, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 287
DEBUG     Course initialisation: Parsing line 288
DEBUG     Course initialisation: Parsing line 289
DEBUG     Course initialisation: Parsing line 290
DEBUG     Course initialisation: Parsing line 291
INFO      Course initialisation: creating exercise from data {'lean_name': 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter', 'lean_statement': ":  f ⁻¹'  (B∩B') = f ⁻¹'  (B) ∩ f ⁻¹'  (B') ", 'PrettyName': 'Image reciproque inter', 'lean_line': 291, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 292
DEBUG     Course initialisation: Parsing line 293
DEBUG     Course initialisation: Parsing line 294
DEBUG     Course initialisation: Parsing line 295
DEBUG     Course initialisation: Parsing line 296
INFO      Course initialisation: creating exercise from data {'lean_name': 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union', 'lean_statement': ": f ⁻¹' (B ∪ B') = f ⁻¹' B ∪ f ⁻¹' B'\n", 'PrettyName': 'Image reciproque union', 'lean_line': 296, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 297
DEBUG     Course initialisation: Parsing line 298
DEBUG     Course initialisation: Parsing line 299
DEBUG     Course initialisation: Parsing line 300
DEBUG     Course initialisation: Parsing line 301
DEBUG     Course initialisation: Parsing line 302
DEBUG     Course initialisation: Parsing line 303
INFO      Course initialisation: creating exercise from data {'lean_name': 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque', 'lean_statement': ":\n(f ⁻¹'  (set.Inter (λ i, F i))) = set.Inter (λ i, f ⁻¹' (F i))\n", 'PrettyName': 'Image reciproque inter quelconque', 'lean_line': 303, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 304
DEBUG     Course initialisation: Parsing line 305
DEBUG     Course initialisation: Parsing line 306
DEBUG     Course initialisation: Parsing line 307
DEBUG     Course initialisation: Parsing line 308
DEBUG     Course initialisation: Parsing line 309
DEBUG     Course initialisation: Parsing line 310
DEBUG     Course initialisation: Parsing line 311
DEBUG     Course initialisation: Parsing line 312
DEBUG     Course initialisation: Parsing line 313
DEBUG     Course initialisation: Parsing line 314
DEBUG     Course initialisation: Parsing line 315
DEBUG     Course initialisation: Parsing line 316
INFO      Course initialisation: creating exercise from data {'lean_name': 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images', 'lean_statement': ":\nf '' (A∩A') ⊆ f '' (A) ∩ f '' (A')\n", 'PrettyName': 'Image inter inclus inter images', 'lean_line': 316, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 317
DEBUG     Course initialisation: Parsing line 318
DEBUG     Course initialisation: Parsing line 319
DEBUG     Course initialisation: Parsing line 320
DEBUG     Course initialisation: Parsing line 321
DEBUG     Course initialisation: Parsing line 322
DEBUG     Course initialisation: Parsing line 323
DEBUG     Course initialisation: Parsing line 324
INFO      Course initialisation: creating exercise from data {'PrettyName': ' Image réciproque du complémentaire, inclusion', 'lean_name': 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I', 'lean_statement': ":\nf ⁻¹' (set.compl B) ⊆ set.compl (f ⁻¹' B)\n", 'lean_line': 324, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 325
DEBUG     Course initialisation: Parsing line 326
DEBUG     Course initialisation: Parsing line 327
DEBUG     Course initialisation: Parsing line 328
DEBUG     Course initialisation: Parsing line 329
DEBUG     Course initialisation: Parsing line 330
DEBUG     Course initialisation: Parsing line 331
DEBUG     Course initialisation: Parsing line 332
DEBUG     Course initialisation: Parsing line 333
DEBUG     Course initialisation: Parsing line 334
DEBUG     Course initialisation: Parsing line 335
INFO      Course initialisation: creating exercise from data {'PrettyName': ' Image réciproque du complémentaire, égalité', 'lean_name': 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II', 'lean_statement': ":\nf ⁻¹' (set.compl B) = set.compl (f ⁻¹' B)\n", 'lean_line': 335, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 336
DEBUG     Course initialisation: Parsing line 337
DEBUG     Course initialisation: Parsing line 338
DEBUG     Course initialisation: Parsing line 339
DEBUG     Course initialisation: Parsing line 340
DEBUG     Course initialisation: Parsing line 341
DEBUG     Course initialisation: Parsing line 342
DEBUG     Course initialisation: Parsing line 343
DEBUG     Course initialisation: Parsing line 344
DEBUG     Course initialisation: Parsing line 345
DEBUG     Course initialisation: Parsing line 346
DEBUG     Course initialisation: closing namespace applications_I
DEBUG     Course initialisation: Parsing line 347
DEBUG     Course initialisation: Parsing line 348
DEBUG     Course initialisation: Parsing line 349
DEBUG     Course initialisation: Parsing line 350
DEBUG     Course initialisation: Parsing line 351
DEBUG     Course initialisation: namespace theorie_des_ensembles.applications_II
DEBUG     Course initialisation: Parsing line 352
DEBUG     Course initialisation: Parsing line 353
DEBUG     Course initialisation: Parsing line 354
DEBUG     Course initialisation: Parsing line 355
DEBUG     Course initialisation: Parsing line 356
DEBUG     Course initialisation: Parsing line 357
DEBUG     Course initialisation: Parsing line 358
DEBUG     Course initialisation: Parsing line 359
DEBUG     Course initialisation: Parsing line 360
DEBUG     Course initialisation: Parsing line 361
DEBUG     Course initialisation: Parsing line 362
DEBUG     Course initialisation: Parsing line 363
DEBUG     Course initialisation: namespace theorie_des_ensembles.applications_II.definitions
DEBUG     Course initialisation: Parsing line 364
DEBUG     Course initialisation: Parsing line 365
DEBUG     Course initialisation: Parsing line 366
DEBUG     Course initialisation: Parsing line 367
DEBUG     Course initialisation: Parsing line 368
DEBUG     Course initialisation: Parsing line 369
DEBUG     Course initialisation: Parsing line 370
DEBUG     Course initialisation: Parsing line 371
DEBUG     Course initialisation: Parsing line 372
INFO      Course initialisation: creating definition from data {'lean_name': 'theorie_des_ensembles.applications_II.definitions.definition.injectivite', 'lean_statement': ':\ninjective f ↔ ∀ x y : X, (f x = f y → x = y)\n', 'PrettyName': 'Injectivite', 'lean_line': 372, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: Parsing line 373
DEBUG     Course initialisation: Parsing line 374
DEBUG     Course initialisation: Parsing line 375
DEBUG     Course initialisation: Parsing line 376
DEBUG     Course initialisation: Parsing line 377
DEBUG     Course initialisation: Parsing line 378
DEBUG     Course initialisation: Parsing line 379
INFO      Course initialisation: creating definition from data {'lean_name': 'theorie_des_ensembles.applications_II.definitions.definition.surjectivite', 'lean_statement': ':\nsurjective f ↔ ∀ y : Y, ∃ x : X, f x = y\n', 'PrettyName': 'Surjectivite', 'lean_line': 379, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: Parsing line 380
DEBUG     Course initialisation: Parsing line 381
DEBUG     Course initialisation: Parsing line 382
DEBUG     Course initialisation: Parsing line 383
DEBUG     Course initialisation: Parsing line 384
DEBUG     Course initialisation: Parsing line 385
DEBUG     Course initialisation: Parsing line 386
INFO      Course initialisation: creating definition from data {'lean_name': 'theorie_des_ensembles.applications_II.definitions.definition.composition', 'lean_statement': ':\n∀ x:X, composition g f x = g (f x)\n', 'PrettyName': 'Composition', 'lean_line': 386, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: Parsing line 387
DEBUG     Course initialisation: Parsing line 388
DEBUG     Course initialisation: Parsing line 389
DEBUG     Course initialisation: Parsing line 390
DEBUG     Course initialisation: Parsing line 391
DEBUG     Course initialisation: Parsing line 392
DEBUG     Course initialisation: Parsing line 393
INFO      Course initialisation: creating definition from data {'lean_name': 'theorie_des_ensembles.applications_II.definitions.definition.egalite_fonctions', 'lean_statement': "(f' : X → Y) :\nf = f' ↔ ∀ x, f x = f' x ", 'PrettyName': 'Egalite fonctions', 'lean_line': 393, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: Parsing line 394
DEBUG     Course initialisation: Parsing line 395
DEBUG     Course initialisation: Parsing line 396
DEBUG     Course initialisation: Parsing line 397
DEBUG     Course initialisation: Parsing line 398
DEBUG     Course initialisation: Parsing line 399
DEBUG     Course initialisation: Parsing line 400
INFO      Course initialisation: creating definition from data {'lean_name': 'theorie_des_ensembles.applications_II.definitions.definition.Identite', 'lean_statement': '(f₀: X → X) :\nf₀ = Identite ↔ ∀ x, f₀ x = x ', 'PrettyName': 'Identite', 'lean_line': 400, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: Parsing line 401
DEBUG     Course initialisation: Parsing line 402
DEBUG     Course initialisation: Parsing line 403
DEBUG     Course initialisation: Parsing line 404
DEBUG     Course initialisation: Parsing line 405
DEBUG     Course initialisation: Parsing line 406
DEBUG     Course initialisation: closing namespace definitions
DEBUG     Course initialisation: Parsing line 407
DEBUG     Course initialisation: Parsing line 408
DEBUG     Course initialisation: Parsing line 409
DEBUG     Course initialisation: Parsing line 410
DEBUG     Course initialisation: Parsing line 411
DEBUG     Course initialisation: Parsing line 412
DEBUG     Course initialisation: Parsing line 413
DEBUG     Course initialisation: Parsing line 414
DEBUG     Course initialisation: namespace theorie_des_ensembles.applications_II.inverses
DEBUG     Course initialisation: Parsing line 415
DEBUG     Course initialisation: Parsing line 416
DEBUG     Course initialisation: Parsing line 417
INFO      Course initialisation: creating exercise from data {'lean_name': 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche', 'lean_statement': ': (injective f) ↔\n∃ F: Y → X, (composition F f) = Identite ', 'PrettyName': 'Injective ssi inverse gauche', 'lean_line': 417, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 418
DEBUG     Course initialisation: Parsing line 419
DEBUG     Course initialisation: Parsing line 420
DEBUG     Course initialisation: Parsing line 421
DEBUG     Course initialisation: Parsing line 422
DEBUG     Course initialisation: Parsing line 423
INFO      Course initialisation: creating exercise from data {'lean_name': 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite', 'lean_statement': ': (surjective f) ↔\n∃ F: Y → X, (composition f F) = Identite ', 'PrettyName': 'Surjective ssi inverse droite', 'lean_line': 423, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 424
DEBUG     Course initialisation: Parsing line 425
DEBUG     Course initialisation: Parsing line 426
DEBUG     Course initialisation: Parsing line 427
DEBUG     Course initialisation: Parsing line 428
DEBUG     Course initialisation: Parsing line 429
DEBUG     Course initialisation: Parsing line 430
DEBUG     Course initialisation: closing namespace inverses
DEBUG     Course initialisation: Parsing line 431
DEBUG     Course initialisation: Parsing line 432
DEBUG     Course initialisation: Parsing line 433
DEBUG     Course initialisation: namespace theorie_des_ensembles.applications_II.composition
DEBUG     Course initialisation: Parsing line 434
DEBUG     Course initialisation: Parsing line 435
DEBUG     Course initialisation: Parsing line 436
INFO      Course initialisation: creating exercise from data {'lean_name': 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections', 'lean_statement': '(H1 : injective (λx:X, f x)) (H2 : injective g) :\ninjective (composition g f)\n', 'PrettyName': 'Composition injections', 'lean_line': 436, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 437
DEBUG     Course initialisation: Parsing line 438
DEBUG     Course initialisation: Parsing line 439
DEBUG     Course initialisation: Parsing line 440
DEBUG     Course initialisation: Parsing line 441
DEBUG     Course initialisation: Parsing line 442
DEBUG     Course initialisation: Parsing line 443
DEBUG     Course initialisation: Parsing line 444
INFO      Course initialisation: creating exercise from data {'lean_name': 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections', 'lean_statement': '(H1 : surjective f) (H2 : surjective g) :\nsurjective (composition g f)\n', 'PrettyName': 'Composition surjections', 'lean_line': 444, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 445
DEBUG     Course initialisation: Parsing line 446
DEBUG     Course initialisation: Parsing line 447
DEBUG     Course initialisation: Parsing line 448
DEBUG     Course initialisation: Parsing line 449
DEBUG     Course initialisation: Parsing line 450
DEBUG     Course initialisation: Parsing line 451
DEBUG     Course initialisation: Parsing line 452
INFO      Course initialisation: creating exercise from data {'lean_name': 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective', 'lean_statement': '(H1 : injective (composition g f)) :\ninjective f\n', 'PrettyName': 'Injective si coompo injective', 'lean_line': 452, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 453
DEBUG     Course initialisation: Parsing line 454
DEBUG     Course initialisation: Parsing line 455
DEBUG     Course initialisation: Parsing line 456
DEBUG     Course initialisation: Parsing line 457
DEBUG     Course initialisation: Parsing line 458
DEBUG     Course initialisation: Parsing line 459
DEBUG     Course initialisation: Parsing line 460
INFO      Course initialisation: creating exercise from data {'lean_name': 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective', 'lean_statement': '(H1 : surjective (composition g f)) :\nsurjective g\n', 'PrettyName': 'Surjective si coompo surjective', 'lean_line': 460, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 461
DEBUG     Course initialisation: Parsing line 462
DEBUG     Course initialisation: Parsing line 463
DEBUG     Course initialisation: Parsing line 464
DEBUG     Course initialisation: Parsing line 465
DEBUG     Course initialisation: Parsing line 466
DEBUG     Course initialisation: Parsing line 467
DEBUG     Course initialisation: Parsing line 468
DEBUG     Course initialisation: closing namespace composition
DEBUG     Course initialisation: Parsing line 469
DEBUG     Course initialisation: Parsing line 470
DEBUG     Course initialisation: closing namespace applications_II
DEBUG     Course initialisation: Parsing line 471
DEBUG     Course initialisation: Parsing line 472
DEBUG     Course initialisation: closing namespace theorie_des_ensembles
DEBUG     Course initialisation: Parsing line 473
DEBUG     Course initialisation: Parsing line 474
DEBUG     Course initialisation: (just closing section(?) course)
INFO      Course initialisation: 36 statements, including 21 exercises found by parser
INFO      lean           : Started server
INFO      ServerInterface: Set exercise to: theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter ->  Intersection avec une union
DEBUG     lean           : Tx : {"file_name": "theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter", "content": "import data.set\nimport tactic\n\n-- dEAduction imports\nimport structures2\nimport definitions\n\n-- General principles :\n-- Type should be defined as parameters, in order to be implicit everywhere\n-- other parameters are implicit in definitions, i.e. defined using '{}' (e.g. {A : set X} )\n-- but explicit everywhere else, i.e. defined using '()' (e.g. (A : set X) )\n-- each definition must be an iff statement (since it will be called with 'rw' or 'symp_rw')\n\n\n\nlocal attribute [instance] classical.prop_decidable\n---------------------------------------------\n-- global parameters = implicit variables --\n---------------------------------------------\nsection course\nparameters {X Y Z: Type}\n\n\n------------------\n-- COURSE TITLE --\n------------------\nnamespace theorie_des_ensembles\n/- dEAduction\nPrettyName\n    Th\u00e9orie des ensembles\n-/\n\n\n------------------------\n-- COURSE DEFINITIONS --\n------------------------\nlemma definition.inclusion {A B : set X} : A \u2286 B \u2194 \u2200 {x:X}, x \u2208 A \u2192 x \u2208 B :=\niff.rfl\n\nlemma definition.egalite_deux_ensembles {A A' : set X} :\n(A = A') \u2194 ( \u2200 x, x \u2208 A \u2194 x \u2208 A' ) :=\n/- dEAduction\nPrettyName\n    egalit\u00e9 de deux ensembles\n-/\nby exact set.ext_iff\n\nlemma theorem.double_inclusion (A A' : set X) :\n(A \u2286 A' \u2227 A' \u2286 A) \u2192 A = A' :=\n/- dEAduction\nPrettyName\n    Double inclusion\n-/\nbegin\n    exact set.subset.antisymm_iff.mpr\nend\n\n---------------\n-- SECTION 1 --\n---------------\nnamespace unions_et_intersections\n-- variables unions_et_intersections --\nvariables {A B C : set X}\n\n-----------------\n-- DEFINITIONS --\n-----------------\nlemma definition.intersection_deux_ensembles {A B : set X} {x : X} :\nx \u2208 A \u2229 B \u2194 ( x \u2208 A \u2227 x \u2208 B) :=\niff.rfl\n/- dEAduction\nPrettyName\n    Intersection de deux ensembles\n-/\n\nlemma definition.intersection_quelconque_ensembles {I : Type} {E : I \u2192 set X}  {x : X} :\n(x \u2208 set.Inter (\u03bb i, E i)) \u2194 (\u2200 i:I, x \u2208 E i) :=\nset.mem_Inter\n/- dEAduction\nPrettyName\n    Intersection d'une famille d'ensembles quelconque\n-/\n\nlemma definition.union_deux_ensembles  {A : set X} {B : set X} {x : X} :\nx \u2208 A \u222a B \u2194 ( x \u2208 A \u2228 x \u2208 B) :=\niff.rfl\n/- dEAduction\nPrettyName\n    Union de deux ensembles\n-/\n\nlemma definition.union_quelconque_ensembles {I : Type} {E : I \u2192 set X}  {x : X} :\n(x \u2208 set.Union (\u03bb i, E i)) \u2194 (\u2203 i:I, x \u2208 E i) :=\nset.mem_Union\n/- dEAduction\nPrettyName\n    Union d'une famille d'ensembles quelconque\n-/\n\n\n---------------\n-- EXERCICES --\n---------------\nlemma exercise.union_distributive_inter : A \u2229 (B \u222a C)  = (A \u2229 B) \u222a (A \u2229 C) :=\n/- dEAduction\nPrettyName\n    Intersection avec une union\nDescription\n    L'intersection est distributive par rapport \u00e0 l'union\nTools->Logic\n    $ALL -negate\nTools->ProofTechniques\n    $ALL -contradiction\nTools->Definitions\n    $UNTIL_NOW -union_quelconque_ensembles -intersection_quelconque_ensembles\nTools->Theorems\n    double_inclusion\nExpectedVarsNumber\n    X=3, A=1, B=1\n-/\n\nbegin\nhypo_analysis,\ntargets_analysis,\nend\n\nlemma exercise.inter_distributive_union : A \u222a (B \u2229 C)  = (A \u222a B) \u2229 (A \u222a C) :=\n/- dEAduction\nPrettyName\n    Union avec une intersection\nDescription\n    L'union est distributive par rapport \u00e0 l'intersection\n-/\nbegin\n    sorry\nend\n\nend unions_et_intersections\n\n\n---------------\n-- SECTION 2 --\n---------------\nnamespace complementaire\n-- variables complementaire --\nvariables  {A B : set X}\nvariables {I : Type} {E F : I \u2192 set X}\nnotation `\u2201`A := set.compl A\n\n-----------------\n-- DEFINITIONS --\n-----------------\nlemma definition.complement {A : set X} {x : X} : x \u2208 set.compl A \u2194 x \u2209 A :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire\n-/\nby finish\n\n--lemma definition.difference_d_ensembles {A B : set X} {x : X} : x \u2208 B \\ A \u2194 (x \u2208 B \u2227 x \u2209 A) :=\n-- iff.rfl\n\n\n---------------\n-- EXERCICES --\n---------------\nlemma exercise.complement_complement : (set.compl (set.compl A)) = A :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire du compl\u00e9mentaire\nDescription\n    Tout ensemble est \u00e9gal au compl\u00e9mentaire de son compl\u00e9mentaire\n-/\nbegin\n    sorry\nend\n\nlemma exercise.complement_union_deux :\nset.compl (A \u222a B) = (set.compl A) \u2229 (set.compl B) :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire d'union I\nDescription\n    Le compl\u00e9mentaire de l'union de deux ensembles \u00e9gale l'intersection des compl\u00e9mentaires\n-/\nbegin\n    sorry\nend\n\nlemma exercise.complement_union_quelconque :\nset.compl (set.Union (\u03bb i, E i)) = set.Inter (\u03bb i, set.compl (E i)) :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire d'union II\nDescription\n    Le compl\u00e9mentaire d'une r\u00e9union quelconque \u00e9gale l'intersection des compl\u00e9mentaires\n-/\nbegin\n    sorry\nend\n\n\nlemma exercise.inclusion_complement_I :\nA \u2286 B \u2192 set.compl B \u2286 set.compl A\n:=\n/- dEAduction\nPrettyName\n    Le passage au compl\u00e9mentaire renverse les inclusions, implication\nDescription\n    Si A est inclus dans B, alors le compl\u00e9mentaire de A contient le compl\u00e9mentaire de B\n-/\nbegin\n    sorry\nend\n\nlemma exercise.inclusion_complement_II :\nA \u2286 B \u2194 set.compl B \u2286 set.compl A\n:=\n/- dEAduction\nPrettyName\n    Le passage au compl\u00e9mentaire renverse les inclusions, \u00e9quivalence\nDescription\n    Si A est inclus dans B, alors le compl\u00e9mentaire de A contient le compl\u00e9mentaire de B\n-/\nbegin\n    sorry\nend\n\n/- Autres : diff\u00e9rence-/\n\nend complementaire\n\n\n\n-- Ajouter : 3. produit cart\u00e9sien, 4. relations ?\n-- comment d\u00e9finit-on un produit cart\u00e9sien d'ensembles ?\n\n\n\n---------------\n-- SECTION 3 --\n---------------\nnamespace applications_I\n/- dEAduction\nPrettyName\n    Applications et op\u00e9rations ensemblistes\n-/\n\n\n-- variables applications --\nnotation f `\u27ee` A `\u27ef` := f '' A\nnotation f `\u207b\u00b9\u27ee` A `\u27ef` := f  \u207b\u00b9' A\n\nvariables  {A A': set X}\nvariables {f: X \u2192 Y} {B B': set Y}\nvariables {I : Type} {E : I \u2192 set X} {F : I \u2192 set Y}\n\n-- a-t-on besoin de ceci ?\n-- lemma theorem.egalite_fonctions : f = f' \u2194 \u2200 x : X, f(x) = f'(x) :=\n--  function.funext_iff\n\n\n-----------------\n-- DEFINITIONS --\n-----------------\nlemma definition.image_directe (y : Y) : y \u2208 f '' A \u2194 \u2203 x : X, x \u2208 A \u2227  f x = y :=\n/- dEAduction -/\nbegin\n    sorry\nend\n\nlemma definition.image_reciproque (x:X) : x \u2208 f  \u207b\u00b9' B \u2194 f(x) \u2208 B :=\n/- dEAduction -/\nbegin\n    sorry\nend\n\n\n---------------\n-- EXERCICES --\n---------------\nlemma exercise.image_de_reciproque : f '' (f \u207b\u00b9' B)  \u2286 B :=\nbegin\n    sorry\nend\n\nlemma exercise.reciproque_de_image : A \u2286 f \u207b\u00b9' (f '' A) :=\nbegin\n    sorry\nend\n\nlemma exercise.image_reciproque_inter :  f \u207b\u00b9'  (B\u2229B') = f \u207b\u00b9'  (B) \u2229 f \u207b\u00b9'  (B') :=\nbegin\n    sorry\nend\n\nlemma  exercise.image_reciproque_union  : f \u207b\u00b9' (B \u222a B') = f \u207b\u00b9' B \u222a f \u207b\u00b9' B'\n:=\nbegin\n    sorry\nend\n\nset_option pp.width 100\nlemma exercise.image_reciproque_inter_quelconque :\n(f \u207b\u00b9'  (set.Inter (\u03bb i, F i))) = set.Inter (\u03bb i, f \u207b\u00b9' (F i))\n:=\n/- dEAduction\nPrettyName\n\n-/\nbegin\n    sorry\nend\n\n/- Idem union quelconques -/\n\nlemma exercise.image_inter_inclus_inter_images :\nf '' (A\u2229A') \u2286 f '' (A) \u2229 f '' (A')\n:=\nbegin\n    sorry\nend\n\n\nlemma exercise.reciproque_complementaire_I :\nf \u207b\u00b9' (set.compl B) \u2286 set.compl (f \u207b\u00b9' B)\n:=\n/- dEAduction\nPrettyName\n    Image r\u00e9ciproque du compl\u00e9mentaire, inclusion\n-/\nbegin\n    sorry\nend\n\nlemma exercise.reciproque_complementaire_II :\nf \u207b\u00b9' (set.compl B) = set.compl (f \u207b\u00b9' B)\n:=\n/- dEAduction\nPrettyName\n    Image r\u00e9ciproque du compl\u00e9mentaire, \u00e9galit\u00e9\n-/\nbegin\n    sorry\nend\n\nend applications_I\n\n----------------\n-- SUBSECTION --\n----------------\nnamespace applications_II\n/- dEAduction\nPrettyName\n    Injections et surjections\n-/\n\n-- variables injections_surjections --\nvariables (f: X \u2192 Y) (g : Y \u2192 Z) (h : X \u2192 Z)\n\n-----------------\n-- DEFINITIONS --\n-----------------\nnamespace definitions\ndef injective {X Y : Type} (f\u2080 : X \u2192 Y) := \u2200 x y : X, (f\u2080 x = f\u2080 y \u2192 x = y)\ndef surjective {X Y : Type} (f\u2080 : X \u2192 Y) := \u2200 y : Y, \u2203 x : X, f\u2080 x = y\ndef composition {X Y Z : Type} (g\u2080 : Y \u2192 Z) (f\u2080 : X \u2192 Y) := \u03bbx:X, g\u2080 (f\u2080 x)\ndef Identite {X : Type} := \u03bb x:X, x\n\nnotation g `\u2218` f := composition g f\n\n\nlemma definition.injectivite :\ninjective f \u2194 \u2200 x y : X, (f x = f y \u2192 x = y)\n:=\nbegin\n    unfold injective,\nend\n\nlemma definition.surjectivite :\nsurjective f \u2194 \u2200 y : Y, \u2203 x : X, f x = y\n:=\nbegin\n    unfold surjective,\nend\n\nlemma definition.composition :\n\u2200 x:X, composition g f x = g (f x)\n:=\nbegin\n    sorry\nend\n\nlemma definition.egalite_fonctions (f' : X \u2192 Y) :\nf = f' \u2194 \u2200 x, f x = f' x :=\nbegin\n    exact function.funext_iff,\nend\n\n\nlemma definition.Identite (f\u2080: X \u2192 X) :\nf\u2080 = Identite \u2194 \u2200 x, f\u2080 x = x :=\nbegin\n    apply definition.egalite_fonctions,\nend\n\nend definitions\n\n\n---------------\n-- EXERCICES --\n---------------\n\n------------------\nnamespace inverses\nopen applications_II.definitions\n\nlemma exercise.injective_ssi_inverse_gauche : (injective f) \u2194\n\u2203 F: Y \u2192 X, (composition F f) = Identite :=\nbegin\n    sorry\nend\n\nlemma exercise.surjective_ssi_inverse_droite : (surjective f) \u2194\n\u2203 F: Y \u2192 X, (composition f F) = Identite :=\nbegin\n    sorry\nend\n\n\nend inverses\n\n---------------------\nnamespace composition\nopen applications_II.definitions\n\nlemma exercise.composition_injections\n(H1 : injective (\u03bbx:X, f x)) (H2 : injective g) :\ninjective (composition g f)\n:=\nbegin\n    sorry\nend\n\nlemma exercise.composition_surjections\n(H1 : surjective f) (H2 : surjective g) :\nsurjective (composition g f)\n:=\nbegin\n    sorry\nend\n\nlemma exercise.injective_si_coompo_injective\n(H1 : injective (composition g f)) :\ninjective f\n:=\nbegin\n    sorry\nend\n\nlemma exercise.surjective_si_coompo_surjective\n(H1 : surjective (composition g f)) :\nsurjective g\n:=\nbegin\n    sorry\nend\n\nend composition\n\nend applications_II\n\nend theorie_des_ensembles\n\nend course", "seq_num": 0, "command": "sync"}
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"message":"file invalidated","response":"ok","seq_num":0}
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":339,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures2.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":339,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures2.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":339,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures2.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":339,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures2.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":339,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures2.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":339,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures2.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 9","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":9},{"desc":"parsing at line 8","end_pos_col":1,"end_pos_line":339,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures2.lean","pos_col":0,"pos_line":8},{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 58","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":58},{"desc":"parsing at line 51","end_pos_col":1,"end_pos_line":339,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures2.lean","pos_col":0,"pos_line":51},{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 98","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":98},{"desc":"parsing at line 51","end_pos_col":1,"end_pos_line":339,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures2.lean","pos_col":0,"pos_line":51},{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 51","end_pos_col":1,"end_pos_line":339,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures2.lean","pos_col":0,"pos_line":51},{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 51","end_pos_col":1,"end_pos_line":339,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures2.lean","pos_col":0,"pos_line":51},{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 182","end_pos_col":1,"end_pos_line":339,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures2.lean","pos_col":0,"pos_line":182},{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 253","end_pos_col":1,"end_pos_line":339,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures2.lean","pos_col":0,"pos_line":253},{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 317","end_pos_col":1,"end_pos_line":339,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures2.lean","pos_col":0,"pos_line":317},{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"theorie_des_ensembles.complementaire.definition.complement","end_pos_col":0,"end_pos_line":167,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":153},{"desc":"theorie_des_ensembles.complementaire.definition.complement","end_pos_col":0,"end_pos_line":167,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":153},{"desc":"theorie_des_ensembles.complementaire.definition.complement","end_pos_col":0,"end_pos_line":167,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":153},{"desc":"theorie_des_ensembles.complementaire.exercise.complement_complement","end_pos_col":0,"end_pos_line":178,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":167},{"desc":"theorie_des_ensembles.complementaire.exercise.complement_complement","end_pos_col":0,"end_pos_line":178,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":167},{"desc":"theorie_des_ensembles.complementaire.exercise.complement_complement","end_pos_col":0,"end_pos_line":178,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":167},{"desc":"theorie_des_ensembles.complementaire.exercise.complement_union_deux","end_pos_col":0,"end_pos_line":190,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":178},{"desc":"theorie_des_ensembles.complementaire.exercise.complement_union_deux","end_pos_col":0,"end_pos_line":190,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":178},{"desc":"theorie_des_ensembles.complementaire.exercise.complement_union_deux","end_pos_col":0,"end_pos_line":190,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":178},{"desc":"parsing at line 190","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":190}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"msgs":[{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":123,"severity":"information","text":"context:\n¿¿¿object: LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿= TYPE\n¿¿¿object: LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.10.128972¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.10.128975¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.10.128978¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":124,"severity":"information","text":"targets:\n¿¿¿property¿[pp_type: A ∩ (B ∪ C) = A ∩ B ∪ A ∩ C¿]: METAVAR¿[name: _mlocal._fresh.14.305¿]¿= PROP_EQUAL¿[type: PROP¿]¿(SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.10.128972¿]¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)¿]¿(LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.10.128975¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.10.128978¿]¿)¿)¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)¿]¿(SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.10.128972¿]¿, LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.10.128975¿]¿)¿, SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.10.128972¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.10.128978¿]¿)¿)¿)\n"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":125,"severity":"error","text":"tactic failed, there are unsolved goals\nstate:\nX : Type,\nA B C : set X\n⊢ A ∩ (B ∪ C) = A ∩ B ∪ A ∩ C"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":127,"severity":"warning","text":"declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":167,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":178,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":190,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":203,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":216,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry"}],"response":"all_messages"}
INFO      ServerInterface: Got new context
INFO      ServerInterface: Got new targets
ERROR     ServerInterface: Lean error at line 125: tactic failed, there are unsolved goals
state:
X : Type,
A B C : set X
⊢ A ∩ (B ∪ C) = A ∩ B ∪ A ∩ C
WARNING   ServerInterface: Lean warning at line 127: declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry
WARNING   ServerInterface: Lean warning at line 167: declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry
WARNING   ServerInterface: Lean warning at line 178: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry
WARNING   ServerInterface: Lean warning at line 190: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 203: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry
WARNING   ServerInterface: Lean warning at line 216: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry
DEBUG     ServerInterface: Proof State received
DEBUG     ServerInterface: After request
INFO      deaduction.pylib.mathobj.proof_state: creating new ProofState from lean strings
INFO      deaduction.pylib.mathobj.proof_state: creating new Goal from lean strings
INFO      deaduction.pylib.mathobj.lean_analysis_with_type: Creating MathObject MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
INFO      deaduction.pylib.mathobj.lean_analysis_with_type: Creating MathObject MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
INFO      deaduction.pylib.mathobj.lean_analysis_with_type: Creating MathObject MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
INFO      deaduction.pylib.mathobj.lean_analysis_with_type: Creating MathObject MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
INFO      deaduction.pylib.mathobj.lean_analysis_with_type: Creating MathObject MathObject(node='METAVAR', info={'pp_type': 'A ∩ (B ∪ C) = A ∩ B ∪ A ∩ C', 'name': '_mlocal._fresh.14.305'}, math_type=MathObject(node='PROP_EQUAL', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])]), children=[])
DEBUG     deaduction.dui.widgets.exercise_widgets: No previous proof state found
DEBUG     deaduction.dui.widgets.exercise_widgets: no tag for target
INFO      deaduction.pylib.mathobj.proof_state: split objects and propositions of the context
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='TYPE', info={}, math_type='not provided', children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a set']
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a subset of ', 0]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a subset of ', 0]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a subset of ', 0]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='PROP_EQUAL', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' = ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∩ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∪ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∪ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∩ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∩ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
INFO      deaduction.pylib.mathobj.proof_state: split objects and propositions of the context
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='TYPE', info={}, math_type='not provided', children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a set']
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a subset of ', 0]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a subset of ', 0]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a subset of ', 0]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='PROP_EQUAL', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' = ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∩ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∪ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∪ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∩ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.10.128975'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∩ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.10.128972'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.10.128978'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.10.128970'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 373","end_pos_col":11,"end_pos_line":475,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":373}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"msgs":[{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":123,"severity":"information","text":"context:\n¿¿¿object: LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿= TYPE\n¿¿¿object: LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.10.128972¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.10.128975¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.10.128978¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":124,"severity":"information","text":"targets:\n¿¿¿property¿[pp_type: A ∩ (B ∪ C) = A ∩ B ∪ A ∩ C¿]: METAVAR¿[name: _mlocal._fresh.14.305¿]¿= PROP_EQUAL¿[type: PROP¿]¿(SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.10.128972¿]¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)¿]¿(LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.10.128975¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.10.128978¿]¿)¿)¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)¿]¿(SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.10.128972¿]¿, LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.10.128975¿]¿)¿, SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.10.128972¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.10.128978¿]¿)¿)¿)\n"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":125,"severity":"error","text":"tactic failed, there are unsolved goals\nstate:\nX : Type,\nA B C : set X\n⊢ A ∩ (B ∪ C) = A ∩ B ∪ A ∩ C"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":127,"severity":"warning","text":"declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":167,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":178,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":190,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":203,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":216,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":266,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":272,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":282,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":287,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":292,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":297,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":304,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":317,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":325,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":336,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry"}],"response":"all_messages"}
INFO      ServerInterface: Got new context
INFO      ServerInterface: Got new targets
ERROR     ServerInterface: Lean error at line 125: tactic failed, there are unsolved goals
state:
X : Type,
A B C : set X
⊢ A ∩ (B ∪ C) = A ∩ B ∪ A ∩ C
WARNING   ServerInterface: Lean warning at line 127: declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry
WARNING   ServerInterface: Lean warning at line 167: declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry
WARNING   ServerInterface: Lean warning at line 178: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry
WARNING   ServerInterface: Lean warning at line 190: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 203: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry
WARNING   ServerInterface: Lean warning at line 216: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry
WARNING   ServerInterface: Lean warning at line 266: declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry
WARNING   ServerInterface: Lean warning at line 272: declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 282: declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 287: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry
WARNING   ServerInterface: Lean warning at line 292: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry
WARNING   ServerInterface: Lean warning at line 297: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry
WARNING   ServerInterface: Lean warning at line 304: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 317: declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry
WARNING   ServerInterface: Lean warning at line 325: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry
WARNING   ServerInterface: Lean warning at line 336: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry
DEBUG     lean           : Rx: {"msgs":[{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":123,"severity":"information","text":"context:\n¿¿¿object: LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿= TYPE\n¿¿¿object: LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.10.128972¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.10.128975¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.10.128978¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":124,"severity":"information","text":"targets:\n¿¿¿property¿[pp_type: A ∩ (B ∪ C) = A ∩ B ∪ A ∩ C¿]: METAVAR¿[name: _mlocal._fresh.14.305¿]¿= PROP_EQUAL¿[type: PROP¿]¿(SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.10.128972¿]¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)¿]¿(LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.10.128975¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.10.128978¿]¿)¿)¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)¿]¿(SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.10.128972¿]¿, LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.10.128975¿]¿)¿, SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.10.128970¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.10.128972¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.10.128978¿]¿)¿)¿)\n"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":125,"severity":"error","text":"tactic failed, there are unsolved goals\nstate:\nX : Type,\nA B C : set X\n⊢ A ∩ (B ∪ C) = A ∩ B ∪ A ∩ C"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":127,"severity":"warning","text":"declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":167,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":178,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":190,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":203,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":216,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":266,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":272,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":282,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":287,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":292,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":297,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":304,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":317,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":325,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":336,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":387,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":418,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":424,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":437,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":445,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":453,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":461,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry"}],"response":"all_messages"}
INFO      ServerInterface: Got new context
INFO      ServerInterface: Got new targets
ERROR     ServerInterface: Lean error at line 125: tactic failed, there are unsolved goals
state:
X : Type,
A B C : set X
⊢ A ∩ (B ∪ C) = A ∩ B ∪ A ∩ C
WARNING   ServerInterface: Lean warning at line 127: declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry
WARNING   ServerInterface: Lean warning at line 167: declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry
WARNING   ServerInterface: Lean warning at line 178: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry
WARNING   ServerInterface: Lean warning at line 190: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 203: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry
WARNING   ServerInterface: Lean warning at line 216: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry
WARNING   ServerInterface: Lean warning at line 266: declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry
WARNING   ServerInterface: Lean warning at line 272: declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 282: declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 287: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry
WARNING   ServerInterface: Lean warning at line 292: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry
WARNING   ServerInterface: Lean warning at line 297: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry
WARNING   ServerInterface: Lean warning at line 304: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 317: declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry
WARNING   ServerInterface: Lean warning at line 325: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry
WARNING   ServerInterface: Lean warning at line 336: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry
WARNING   ServerInterface: Lean warning at line 387: declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry
WARNING   ServerInterface: Lean warning at line 418: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry
WARNING   ServerInterface: Lean warning at line 424: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry
WARNING   ServerInterface: Lean warning at line 437: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry
WARNING   ServerInterface: Lean warning at line 445: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry
WARNING   ServerInterface: Lean warning at line 453: declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry
WARNING   ServerInterface: Lean warning at line 461: declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
INFO      deaduction.dui.widgets.exercise_widgets: Calling action Action(caption='Apply last selected item on previous ones', symbol='APPLY', run=<function action_apply at 0x11562cf80>)
INFO      deaduction.dui.widgets.exercise_widgets: Calling action Action(caption='If target is of form ∃ x, P(x): ask the user to enter a specific x and transform the target into P(x). \nIf a hypothesis of form ∃ x, P(x) has been previously selected: introduce a new x and add P(x) to the properties', symbol='∃', run=<function action_exists at 0x11562cdd0>)
INFO      deaduction.dui.widgets.exercise_widgets: Calling action Action(caption='If the target is of the form P ⇒ Q: introduce the hypothesis P in the properties and transform the target into Q.', symbol='⇒', run=<function action_implicate at 0x11562c8c0>)
INFO      deaduction.dui.widgets.exercise_widgets: Calling action Action(caption="If the target is of the form P OR Q: tranform the target in P (or Q) accordingly to the user's choice.\nIf a hypothesis of the form P OR Q has been previously selected: transform the current goal into two subgoals, one with P as a hypothesis, and another with Q as a hypothesis.", symbol='OR', run=<function action_or at 0x11562c5f0>)
INFO      deaduction.dui.widgets.exercise_widgets: Calling action Action(caption='If the target is of the form P AND Q: transform the current goal into two subgoals, P, then Q.\nIf a hypothesis of the form P AND Q has been previously selected: creates two new hypothesis P, and Q.\n If two hypothesis P, then Q, have been previously selected: add the new hypothesis P AND Q to the properties.', symbol='AND', run=<function action_and at 0x11562c440>)
INFO      deaduction.dui.widgets.exercise_widgets: Calling action Action(caption='If the target is of the form P ⇔ Q: introduce two subgoals, P⇒Q, and Q⇒P.', symbol='⇔', run=<function action_iff at 0x11562ca70>)
INFO      deaduction.dui.widgets.exercise_widgets: Calling action Action(caption='If the target is of the form ∀ x, P(x): introduce x and transform the target into P(x)', symbol='∀', run=<function action_forall at 0x11562cb90>)
DEBUG     lean           : Tx : {"file_name": "theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter", "content": "import data.set\nimport tactic\n\n-- dEAduction imports\nimport structures2\nimport definitions\n\n-- General principles :\n-- Type should be defined as parameters, in order to be implicit everywhere\n-- other parameters are implicit in definitions, i.e. defined using '{}' (e.g. {A : set X} )\n-- but explicit everywhere else, i.e. defined using '()' (e.g. (A : set X) )\n-- each definition must be an iff statement (since it will be called with 'rw' or 'symp_rw')\n\n\n\nlocal attribute [instance] classical.prop_decidable\n---------------------------------------------\n-- global parameters = implicit variables --\n---------------------------------------------\nsection course\nparameters {X Y Z: Type}\n\n\n------------------\n-- COURSE TITLE --\n------------------\nnamespace theorie_des_ensembles\n/- dEAduction\nPrettyName\n    Th\u00e9orie des ensembles\n-/\n\n\n------------------------\n-- COURSE DEFINITIONS --\n------------------------\nlemma definition.inclusion {A B : set X} : A \u2286 B \u2194 \u2200 {x:X}, x \u2208 A \u2192 x \u2208 B :=\niff.rfl\n\nlemma definition.egalite_deux_ensembles {A A' : set X} :\n(A = A') \u2194 ( \u2200 x, x \u2208 A \u2194 x \u2208 A' ) :=\n/- dEAduction\nPrettyName\n    egalit\u00e9 de deux ensembles\n-/\nby exact set.ext_iff\n\nlemma theorem.double_inclusion (A A' : set X) :\n(A \u2286 A' \u2227 A' \u2286 A) \u2192 A = A' :=\n/- dEAduction\nPrettyName\n    Double inclusion\n-/\nbegin\n    exact set.subset.antisymm_iff.mpr\nend\n\n---------------\n-- SECTION 1 --\n---------------\nnamespace unions_et_intersections\n-- variables unions_et_intersections --\nvariables {A B C : set X}\n\n-----------------\n-- DEFINITIONS --\n-----------------\nlemma definition.intersection_deux_ensembles {A B : set X} {x : X} :\nx \u2208 A \u2229 B \u2194 ( x \u2208 A \u2227 x \u2208 B) :=\niff.rfl\n/- dEAduction\nPrettyName\n    Intersection de deux ensembles\n-/\n\nlemma definition.intersection_quelconque_ensembles {I : Type} {E : I \u2192 set X}  {x : X} :\n(x \u2208 set.Inter (\u03bb i, E i)) \u2194 (\u2200 i:I, x \u2208 E i) :=\nset.mem_Inter\n/- dEAduction\nPrettyName\n    Intersection d'une famille d'ensembles quelconque\n-/\n\nlemma definition.union_deux_ensembles  {A : set X} {B : set X} {x : X} :\nx \u2208 A \u222a B \u2194 ( x \u2208 A \u2228 x \u2208 B) :=\niff.rfl\n/- dEAduction\nPrettyName\n    Union de deux ensembles\n-/\n\nlemma definition.union_quelconque_ensembles {I : Type} {E : I \u2192 set X}  {x : X} :\n(x \u2208 set.Union (\u03bb i, E i)) \u2194 (\u2203 i:I, x \u2208 E i) :=\nset.mem_Union\n/- dEAduction\nPrettyName\n    Union d'une famille d'ensembles quelconque\n-/\n\n\n---------------\n-- EXERCICES --\n---------------\nlemma exercise.union_distributive_inter : A \u2229 (B \u222a C)  = (A \u2229 B) \u222a (A \u2229 C) :=\n/- dEAduction\nPrettyName\n    Intersection avec une union\nDescription\n    L'intersection est distributive par rapport \u00e0 l'union\nTools->Logic\n    $ALL -negate\nTools->ProofTechniques\n    $ALL -contradiction\nTools->Definitions\n    $UNTIL_NOW -union_quelconque_ensembles -intersection_quelconque_ensembles\nTools->Theorems\n    double_inclusion\nExpectedVarsNumber\n    X=3, A=1, B=1\n-/\n\nbegin\ndefi theorie_des_ensembles.definition.egalite_deux_ensembles <|> simp_rw theorie_des_ensembles.definition.egalite_deux_ensembles <|> simp_rw <- theorie_des_ensembles.definition.egalite_deux_ensembles,\nhypo_analysis,\ntargets_analysis,\nend\n\nlemma exercise.inter_distributive_union : A \u222a (B \u2229 C)  = (A \u222a B) \u2229 (A \u222a C) :=\n/- dEAduction\nPrettyName\n    Union avec une intersection\nDescription\n    L'union est distributive par rapport \u00e0 l'intersection\n-/\nbegin\n    sorry\nend\n\nend unions_et_intersections\n\n\n---------------\n-- SECTION 2 --\n---------------\nnamespace complementaire\n-- variables complementaire --\nvariables  {A B : set X}\nvariables {I : Type} {E F : I \u2192 set X}\nnotation `\u2201`A := set.compl A\n\n-----------------\n-- DEFINITIONS --\n-----------------\nlemma definition.complement {A : set X} {x : X} : x \u2208 set.compl A \u2194 x \u2209 A :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire\n-/\nby finish\n\n--lemma definition.difference_d_ensembles {A B : set X} {x : X} : x \u2208 B \\ A \u2194 (x \u2208 B \u2227 x \u2209 A) :=\n-- iff.rfl\n\n\n---------------\n-- EXERCICES --\n---------------\nlemma exercise.complement_complement : (set.compl (set.compl A)) = A :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire du compl\u00e9mentaire\nDescription\n    Tout ensemble est \u00e9gal au compl\u00e9mentaire de son compl\u00e9mentaire\n-/\nbegin\n    sorry\nend\n\nlemma exercise.complement_union_deux :\nset.compl (A \u222a B) = (set.compl A) \u2229 (set.compl B) :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire d'union I\nDescription\n    Le compl\u00e9mentaire de l'union de deux ensembles \u00e9gale l'intersection des compl\u00e9mentaires\n-/\nbegin\n    sorry\nend\n\nlemma exercise.complement_union_quelconque :\nset.compl (set.Union (\u03bb i, E i)) = set.Inter (\u03bb i, set.compl (E i)) :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire d'union II\nDescription\n    Le compl\u00e9mentaire d'une r\u00e9union quelconque \u00e9gale l'intersection des compl\u00e9mentaires\n-/\nbegin\n    sorry\nend\n\n\nlemma exercise.inclusion_complement_I :\nA \u2286 B \u2192 set.compl B \u2286 set.compl A\n:=\n/- dEAduction\nPrettyName\n    Le passage au compl\u00e9mentaire renverse les inclusions, implication\nDescription\n    Si A est inclus dans B, alors le compl\u00e9mentaire de A contient le compl\u00e9mentaire de B\n-/\nbegin\n    sorry\nend\n\nlemma exercise.inclusion_complement_II :\nA \u2286 B \u2194 set.compl B \u2286 set.compl A\n:=\n/- dEAduction\nPrettyName\n    Le passage au compl\u00e9mentaire renverse les inclusions, \u00e9quivalence\nDescription\n    Si A est inclus dans B, alors le compl\u00e9mentaire de A contient le compl\u00e9mentaire de B\n-/\nbegin\n    sorry\nend\n\n/- Autres : diff\u00e9rence-/\n\nend complementaire\n\n\n\n-- Ajouter : 3. produit cart\u00e9sien, 4. relations ?\n-- comment d\u00e9finit-on un produit cart\u00e9sien d'ensembles ?\n\n\n\n---------------\n-- SECTION 3 --\n---------------\nnamespace applications_I\n/- dEAduction\nPrettyName\n    Applications et op\u00e9rations ensemblistes\n-/\n\n\n-- variables applications --\nnotation f `\u27ee` A `\u27ef` := f '' A\nnotation f `\u207b\u00b9\u27ee` A `\u27ef` := f  \u207b\u00b9' A\n\nvariables  {A A': set X}\nvariables {f: X \u2192 Y} {B B': set Y}\nvariables {I : Type} {E : I \u2192 set X} {F : I \u2192 set Y}\n\n-- a-t-on besoin de ceci ?\n-- lemma theorem.egalite_fonctions : f = f' \u2194 \u2200 x : X, f(x) = f'(x) :=\n--  function.funext_iff\n\n\n-----------------\n-- DEFINITIONS --\n-----------------\nlemma definition.image_directe (y : Y) : y \u2208 f '' A \u2194 \u2203 x : X, x \u2208 A \u2227  f x = y :=\n/- dEAduction -/\nbegin\n    sorry\nend\n\nlemma definition.image_reciproque (x:X) : x \u2208 f  \u207b\u00b9' B \u2194 f(x) \u2208 B :=\n/- dEAduction -/\nbegin\n    sorry\nend\n\n\n---------------\n-- EXERCICES --\n---------------\nlemma exercise.image_de_reciproque : f '' (f \u207b\u00b9' B)  \u2286 B :=\nbegin\n    sorry\nend\n\nlemma exercise.reciproque_de_image : A \u2286 f \u207b\u00b9' (f '' A) :=\nbegin\n    sorry\nend\n\nlemma exercise.image_reciproque_inter :  f \u207b\u00b9'  (B\u2229B') = f \u207b\u00b9'  (B) \u2229 f \u207b\u00b9'  (B') :=\nbegin\n    sorry\nend\n\nlemma  exercise.image_reciproque_union  : f \u207b\u00b9' (B \u222a B') = f \u207b\u00b9' B \u222a f \u207b\u00b9' B'\n:=\nbegin\n    sorry\nend\n\nset_option pp.width 100\nlemma exercise.image_reciproque_inter_quelconque :\n(f \u207b\u00b9'  (set.Inter (\u03bb i, F i))) = set.Inter (\u03bb i, f \u207b\u00b9' (F i))\n:=\n/- dEAduction\nPrettyName\n\n-/\nbegin\n    sorry\nend\n\n/- Idem union quelconques -/\n\nlemma exercise.image_inter_inclus_inter_images :\nf '' (A\u2229A') \u2286 f '' (A) \u2229 f '' (A')\n:=\nbegin\n    sorry\nend\n\n\nlemma exercise.reciproque_complementaire_I :\nf \u207b\u00b9' (set.compl B) \u2286 set.compl (f \u207b\u00b9' B)\n:=\n/- dEAduction\nPrettyName\n    Image r\u00e9ciproque du compl\u00e9mentaire, inclusion\n-/\nbegin\n    sorry\nend\n\nlemma exercise.reciproque_complementaire_II :\nf \u207b\u00b9' (set.compl B) = set.compl (f \u207b\u00b9' B)\n:=\n/- dEAduction\nPrettyName\n    Image r\u00e9ciproque du compl\u00e9mentaire, \u00e9galit\u00e9\n-/\nbegin\n    sorry\nend\n\nend applications_I\n\n----------------\n-- SUBSECTION --\n----------------\nnamespace applications_II\n/- dEAduction\nPrettyName\n    Injections et surjections\n-/\n\n-- variables injections_surjections --\nvariables (f: X \u2192 Y) (g : Y \u2192 Z) (h : X \u2192 Z)\n\n-----------------\n-- DEFINITIONS --\n-----------------\nnamespace definitions\ndef injective {X Y : Type} (f\u2080 : X \u2192 Y) := \u2200 x y : X, (f\u2080 x = f\u2080 y \u2192 x = y)\ndef surjective {X Y : Type} (f\u2080 : X \u2192 Y) := \u2200 y : Y, \u2203 x : X, f\u2080 x = y\ndef composition {X Y Z : Type} (g\u2080 : Y \u2192 Z) (f\u2080 : X \u2192 Y) := \u03bbx:X, g\u2080 (f\u2080 x)\ndef Identite {X : Type} := \u03bb x:X, x\n\nnotation g `\u2218` f := composition g f\n\n\nlemma definition.injectivite :\ninjective f \u2194 \u2200 x y : X, (f x = f y \u2192 x = y)\n:=\nbegin\n    unfold injective,\nend\n\nlemma definition.surjectivite :\nsurjective f \u2194 \u2200 y : Y, \u2203 x : X, f x = y\n:=\nbegin\n    unfold surjective,\nend\n\nlemma definition.composition :\n\u2200 x:X, composition g f x = g (f x)\n:=\nbegin\n    sorry\nend\n\nlemma definition.egalite_fonctions (f' : X \u2192 Y) :\nf = f' \u2194 \u2200 x, f x = f' x :=\nbegin\n    exact function.funext_iff,\nend\n\n\nlemma definition.Identite (f\u2080: X \u2192 X) :\nf\u2080 = Identite \u2194 \u2200 x, f\u2080 x = x :=\nbegin\n    apply definition.egalite_fonctions,\nend\n\nend definitions\n\n\n---------------\n-- EXERCICES --\n---------------\n\n------------------\nnamespace inverses\nopen applications_II.definitions\n\nlemma exercise.injective_ssi_inverse_gauche : (injective f) \u2194\n\u2203 F: Y \u2192 X, (composition F f) = Identite :=\nbegin\n    sorry\nend\n\nlemma exercise.surjective_ssi_inverse_droite : (surjective f) \u2194\n\u2203 F: Y \u2192 X, (composition f F) = Identite :=\nbegin\n    sorry\nend\n\n\nend inverses\n\n---------------------\nnamespace composition\nopen applications_II.definitions\n\nlemma exercise.composition_injections\n(H1 : injective (\u03bbx:X, f x)) (H2 : injective g) :\ninjective (composition g f)\n:=\nbegin\n    sorry\nend\n\nlemma exercise.composition_surjections\n(H1 : surjective f) (H2 : surjective g) :\nsurjective (composition g f)\n:=\nbegin\n    sorry\nend\n\nlemma exercise.injective_si_coompo_injective\n(H1 : injective (composition g f)) :\ninjective f\n:=\nbegin\n    sorry\nend\n\nlemma exercise.surjective_si_coompo_surjective\n(H1 : surjective (composition g f)) :\nsurjective g\n:=\nbegin\n    sorry\nend\n\nend composition\n\nend applications_II\n\nend theorie_des_ensembles\n\nend course", "seq_num": 1, "command": "sync"}
DEBUG     lean           : Rx: {"message":"file invalidated","response":"ok","seq_num":1}
DEBUG     lean           : Rx: {"msgs":[{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":123,"severity":"information","text":"J'appelle le lemme theorie_des_ensembles.definition.egalite_deux_ensembles,\nsur le but, sens direct\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":124,"severity":"information","text":"context:\n¿¿¿object: LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿= TYPE\n¿¿¿object: LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.15.1333¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.15.1335¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":125,"severity":"information","text":"targets:\n¿¿¿property¿[pp_type: ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C¿]: METAVAR¿[name: _mlocal._fresh.16.706¿]¿= QUANT_∀¿[type: PROP¿]¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿, LOCAL_CONSTANT¿[name: x¿/ identifier: _fresh.16.719¿]¿, PROP_IFF¿[type: PROP¿]¿(PROP_BELONGS¿[type: PROP¿]¿(LOCAL_CONSTANT¿[name: x¿/ identifier: _fresh.16.719¿]¿, SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.15.1333¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.15.1335¿]¿)¿)¿)¿, PROP_BELONGS¿[type: PROP¿]¿(LOCAL_CONSTANT¿[name: x¿/ identifier: _fresh.16.719¿]¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿, LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.15.1333¿]¿)¿, SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.15.1335¿]¿)¿)¿)¿)¿)\n"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":126,"severity":"error","text":"tactic failed, there are unsolved goals\nstate:\nX : Type,\nA B C : set X\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":128,"severity":"warning","text":"declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":168,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":179,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":191,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":204,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":217,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":266,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":272,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":282,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":287,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":292,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":297,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":304,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":317,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":325,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":336,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":387,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":418,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":424,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":437,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":445,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":453,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":461,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry"}],"response":"all_messages"}
INFO      ServerInterface: Got new context
INFO      ServerInterface: Got new targets
ERROR     ServerInterface: Lean error at line 126: tactic failed, there are unsolved goals
state:
X : Type,
A B C : set X
⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C
WARNING   ServerInterface: Lean warning at line 128: declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry
WARNING   ServerInterface: Lean warning at line 168: declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry
WARNING   ServerInterface: Lean warning at line 179: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry
WARNING   ServerInterface: Lean warning at line 191: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 204: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry
WARNING   ServerInterface: Lean warning at line 217: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry
WARNING   ServerInterface: Lean warning at line 266: declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry
WARNING   ServerInterface: Lean warning at line 272: declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 282: declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 287: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry
WARNING   ServerInterface: Lean warning at line 292: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry
WARNING   ServerInterface: Lean warning at line 297: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry
WARNING   ServerInterface: Lean warning at line 304: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 317: declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry
WARNING   ServerInterface: Lean warning at line 325: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry
WARNING   ServerInterface: Lean warning at line 336: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry
WARNING   ServerInterface: Lean warning at line 387: declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry
WARNING   ServerInterface: Lean warning at line 418: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry
WARNING   ServerInterface: Lean warning at line 424: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry
WARNING   ServerInterface: Lean warning at line 437: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry
WARNING   ServerInterface: Lean warning at line 445: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry
WARNING   ServerInterface: Lean warning at line 453: declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry
WARNING   ServerInterface: Lean warning at line 461: declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry
DEBUG     ServerInterface: Proof State received
DEBUG     ServerInterface: After request
INFO      deaduction.pylib.mathobj.proof_state: creating new ProofState from lean strings
INFO      deaduction.pylib.mathobj.proof_state: creating new Goal from lean strings
INFO      deaduction.pylib.mathobj.lean_analysis_with_type: Creating MathObject MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
INFO      deaduction.pylib.mathobj.lean_analysis_with_type: Creating MathObject MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
INFO      deaduction.pylib.mathobj.lean_analysis_with_type: Creating MathObject MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
INFO      deaduction.pylib.mathobj.lean_analysis_with_type: Creating MathObject MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
INFO      deaduction.pylib.mathobj.lean_analysis_with_type: Creating MathObject MathObject(node='METAVAR', info={'pp_type': '∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C', 'name': '_mlocal._fresh.16.706'}, math_type=MathObject(node='QUANT_∀', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='PROP_IFF', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='PROP_BELONGS', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])]), MathObject(node='PROP_BELONGS', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])])])]), children=[])
DEBUG     deaduction.dui.widgets.exercise_widgets: No previous proof state found
DEBUG     deaduction.dui.widgets.exercise_widgets: no tag for target
INFO      deaduction.pylib.mathobj.proof_state: split objects and propositions of the context
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='TYPE', info={}, math_type='not provided', children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a set']
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a subset of ', 0]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a subset of ', 0]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a subset of ', 0]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='QUANT_∀', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='PROP_IFF', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='PROP_BELONGS', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])]), MathObject(node='PROP_BELONGS', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['∀', 1, ' ∈ ', 0, ', ', 2]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='PROP_IFF', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='PROP_BELONGS', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])]), MathObject(node='PROP_BELONGS', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ⇔ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='PROP_BELONGS', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∈ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∩ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∪ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='PROP_BELONGS', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∈ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∪ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∩ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∩ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
INFO      deaduction.pylib.mathobj.proof_state: split objects and propositions of the context
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='TYPE', info={}, math_type='not provided', children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a set']
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a subset of ', 0]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a subset of ', 0]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['a subset of ', 0]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='QUANT_∀', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='PROP_IFF', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='PROP_BELONGS', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])]), MathObject(node='PROP_BELONGS', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape ['∀', 1, ' ∈ ', 0, ', ', 2]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='PROP_IFF', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='PROP_BELONGS', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])]), MathObject(node='PROP_BELONGS', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ⇔ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='PROP_BELONGS', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∈ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∩ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∪ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='PROP_BELONGS', info={}, math_type=MathObject(node='PROP', info={}, math_type='not provided', children=[]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[]), MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∈ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'x', 'identifier': '_fresh.16.719', 'lean_name': 'x'}, math_type=MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_UNION', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])]), MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∪ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∩ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'B', 'identifier': '0._fresh.15.1333'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='SET_INTER', info={}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[]), MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [0, ' ∩ ', 1]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'A', 'identifier': '0._fresh.15.1331'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     deaduction.pylib.mathobj.display_math: Computing math display of MathObject(node='LOCAL_CONSTANT', info={'name': 'C', 'identifier': '0._fresh.15.1335'}, math_type=MathObject(node='SET', info={}, math_type='not provided', children=[MathObject(node='LOCAL_CONSTANT', info={'name': 'X', 'identifier': '0._fresh.15.1330'}, math_type=MathObject(node='TYPE', info={}, math_type='not provided', children=[]), children=[])]), children=[])
DEBUG     deaduction.pylib.mathobj.display_math: Trying to display from shape [<function display_constant at 0x115550680>]
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"theorie_des_ensembles.complementaire.definition.complement","end_pos_col":0,"end_pos_line":168,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":154},{"desc":"theorie_des_ensembles.complementaire.definition.complement","end_pos_col":0,"end_pos_line":168,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":154},{"desc":"theorie_des_ensembles.complementaire.definition.complement","end_pos_col":0,"end_pos_line":168,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":154},{"desc":"theorie_des_ensembles.applications_I.exercise.image_reciproque_inter","end_pos_col":0,"end_pos_line":298,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":293},{"desc":"theorie_des_ensembles.applications_I.exercise.image_reciproque_inter","end_pos_col":0,"end_pos_line":298,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":293},{"desc":"theorie_des_ensembles.applications_I.exercise.image_reciproque_inter","end_pos_col":0,"end_pos_line":298,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":293},{"desc":"theorie_des_ensembles.applications_I.exercise.image_reciproque_union","end_pos_col":0,"end_pos_line":304,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":298},{"desc":"theorie_des_ensembles.applications_I.exercise.image_reciproque_union","end_pos_col":0,"end_pos_line":304,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":298},{"desc":"theorie_des_ensembles.applications_I.exercise.image_reciproque_union","end_pos_col":0,"end_pos_line":304,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":298},{"desc":"parsing at line 305","end_pos_col":11,"end_pos_line":476,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":305}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"msgs":[{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":123,"severity":"information","text":"J'appelle le lemme theorie_des_ensembles.definition.egalite_deux_ensembles,\nsur le but, sens direct\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":124,"severity":"information","text":"context:\n¿¿¿object: LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿= TYPE\n¿¿¿object: LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.15.1333¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.15.1335¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":125,"severity":"information","text":"targets:\n¿¿¿property¿[pp_type: ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C¿]: METAVAR¿[name: _mlocal._fresh.16.706¿]¿= QUANT_∀¿[type: PROP¿]¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿, LOCAL_CONSTANT¿[name: x¿/ identifier: _fresh.16.719¿]¿, PROP_IFF¿[type: PROP¿]¿(PROP_BELONGS¿[type: PROP¿]¿(LOCAL_CONSTANT¿[name: x¿/ identifier: _fresh.16.719¿]¿, SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.15.1333¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.15.1335¿]¿)¿)¿)¿, PROP_BELONGS¿[type: PROP¿]¿(LOCAL_CONSTANT¿[name: x¿/ identifier: _fresh.16.719¿]¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿, LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.15.1333¿]¿)¿, SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.15.1335¿]¿)¿)¿)¿)¿)\n"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":126,"severity":"error","text":"tactic failed, there are unsolved goals\nstate:\nX : Type,\nA B C : set X\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":128,"severity":"warning","text":"declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":168,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":179,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":191,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":204,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":217,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":267,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":273,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":283,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":288,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":292,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":297,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":304,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":317,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":325,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":336,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":387,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":418,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":424,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":437,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":445,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":453,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":461,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry"}],"response":"all_messages"}
INFO      ServerInterface: Got new context
INFO      ServerInterface: Got new targets
ERROR     ServerInterface: Lean error at line 126: tactic failed, there are unsolved goals
state:
X : Type,
A B C : set X
⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C
WARNING   ServerInterface: Lean warning at line 128: declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry
WARNING   ServerInterface: Lean warning at line 168: declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry
WARNING   ServerInterface: Lean warning at line 179: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry
WARNING   ServerInterface: Lean warning at line 191: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 204: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry
WARNING   ServerInterface: Lean warning at line 217: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry
WARNING   ServerInterface: Lean warning at line 267: declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry
WARNING   ServerInterface: Lean warning at line 273: declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 283: declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 288: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry
WARNING   ServerInterface: Lean warning at line 292: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry
WARNING   ServerInterface: Lean warning at line 297: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry
WARNING   ServerInterface: Lean warning at line 304: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 317: declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry
WARNING   ServerInterface: Lean warning at line 325: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry
WARNING   ServerInterface: Lean warning at line 336: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry
WARNING   ServerInterface: Lean warning at line 387: declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry
WARNING   ServerInterface: Lean warning at line 418: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry
WARNING   ServerInterface: Lean warning at line 424: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry
WARNING   ServerInterface: Lean warning at line 437: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry
WARNING   ServerInterface: Lean warning at line 445: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry
WARNING   ServerInterface: Lean warning at line 453: declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry
WARNING   ServerInterface: Lean warning at line 461: declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry
DEBUG     lean           : Rx: {"msgs":[{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":123,"severity":"information","text":"J'appelle le lemme theorie_des_ensembles.definition.egalite_deux_ensembles,\nsur le but, sens direct\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":124,"severity":"information","text":"context:\n¿¿¿object: LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿= TYPE\n¿¿¿object: LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.15.1333¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.15.1335¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":125,"severity":"information","text":"targets:\n¿¿¿property¿[pp_type: ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C¿]: METAVAR¿[name: _mlocal._fresh.16.706¿]¿= QUANT_∀¿[type: PROP¿]¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿, LOCAL_CONSTANT¿[name: x¿/ identifier: _fresh.16.719¿]¿, PROP_IFF¿[type: PROP¿]¿(PROP_BELONGS¿[type: PROP¿]¿(LOCAL_CONSTANT¿[name: x¿/ identifier: _fresh.16.719¿]¿, SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.15.1333¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.15.1335¿]¿)¿)¿)¿, PROP_BELONGS¿[type: PROP¿]¿(LOCAL_CONSTANT¿[name: x¿/ identifier: _fresh.16.719¿]¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿, LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.15.1333¿]¿)¿, SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.15.1335¿]¿)¿)¿)¿)¿)\n"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":126,"severity":"error","text":"tactic failed, there are unsolved goals\nstate:\nX : Type,\nA B C : set X\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":128,"severity":"warning","text":"declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":168,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":179,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":191,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":204,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":217,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":267,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":273,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":283,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":288,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":293,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":298,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":305,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":318,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":326,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":337,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":387,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":418,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":424,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":437,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":445,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":453,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":461,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry"}],"response":"all_messages"}
INFO      ServerInterface: Got new context
INFO      ServerInterface: Got new targets
ERROR     ServerInterface: Lean error at line 126: tactic failed, there are unsolved goals
state:
X : Type,
A B C : set X
⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C
WARNING   ServerInterface: Lean warning at line 128: declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry
WARNING   ServerInterface: Lean warning at line 168: declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry
WARNING   ServerInterface: Lean warning at line 179: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry
WARNING   ServerInterface: Lean warning at line 191: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 204: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry
WARNING   ServerInterface: Lean warning at line 217: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry
WARNING   ServerInterface: Lean warning at line 267: declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry
WARNING   ServerInterface: Lean warning at line 273: declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 283: declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 288: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry
WARNING   ServerInterface: Lean warning at line 293: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry
WARNING   ServerInterface: Lean warning at line 298: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry
WARNING   ServerInterface: Lean warning at line 305: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 318: declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry
WARNING   ServerInterface: Lean warning at line 326: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry
WARNING   ServerInterface: Lean warning at line 337: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry
WARNING   ServerInterface: Lean warning at line 387: declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry
WARNING   ServerInterface: Lean warning at line 418: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry
WARNING   ServerInterface: Lean warning at line 424: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry
WARNING   ServerInterface: Lean warning at line 437: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry
WARNING   ServerInterface: Lean warning at line 445: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry
WARNING   ServerInterface: Lean warning at line 453: declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry
WARNING   ServerInterface: Lean warning at line 461: declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"theorie_des_ensembles.applications_II.definitions.definition.egalite_fonctions","end_pos_col":0,"end_pos_line":402,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":395},{"desc":"theorie_des_ensembles.applications_II.definitions.definition.egalite_fonctions","end_pos_col":0,"end_pos_line":402,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":395},{"desc":"theorie_des_ensembles.applications_II.definitions.definition.egalite_fonctions","end_pos_col":0,"end_pos_line":402,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":395},{"desc":"theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche","end_pos_col":0,"end_pos_line":425,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":419},{"desc":"theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche","end_pos_col":0,"end_pos_line":425,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":419},{"desc":"theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche","end_pos_col":0,"end_pos_line":425,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":419},{"desc":"theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite","end_pos_col":0,"end_pos_line":432,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":425},{"desc":"theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite","end_pos_col":0,"end_pos_line":432,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":425},{"desc":"theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite","end_pos_col":0,"end_pos_line":432,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":425},{"desc":"parsing at line 436","end_pos_col":11,"end_pos_line":476,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":436}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"msgs":[{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":123,"severity":"information","text":"J'appelle le lemme theorie_des_ensembles.definition.egalite_deux_ensembles,\nsur le but, sens direct\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":124,"severity":"information","text":"context:\n¿¿¿object: LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿= TYPE\n¿¿¿object: LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.15.1333¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.15.1335¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":125,"severity":"information","text":"targets:\n¿¿¿property¿[pp_type: ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C¿]: METAVAR¿[name: _mlocal._fresh.16.706¿]¿= QUANT_∀¿[type: PROP¿]¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿, LOCAL_CONSTANT¿[name: x¿/ identifier: _fresh.16.719¿]¿, PROP_IFF¿[type: PROP¿]¿(PROP_BELONGS¿[type: PROP¿]¿(LOCAL_CONSTANT¿[name: x¿/ identifier: _fresh.16.719¿]¿, SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.15.1333¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.15.1335¿]¿)¿)¿)¿, PROP_BELONGS¿[type: PROP¿]¿(LOCAL_CONSTANT¿[name: x¿/ identifier: _fresh.16.719¿]¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿, LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.15.1333¿]¿)¿, SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.15.1335¿]¿)¿)¿)¿)¿)\n"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":126,"severity":"error","text":"tactic failed, there are unsolved goals\nstate:\nX : Type,\nA B C : set X\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":128,"severity":"warning","text":"declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":168,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":179,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":191,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":204,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":217,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":267,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":273,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":283,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":288,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":293,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":298,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":305,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":318,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":326,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":337,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":388,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":419,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":425,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":438,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":446,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":454,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":461,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry"}],"response":"all_messages"}
INFO      ServerInterface: Got new context
INFO      ServerInterface: Got new targets
ERROR     ServerInterface: Lean error at line 126: tactic failed, there are unsolved goals
state:
X : Type,
A B C : set X
⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C
WARNING   ServerInterface: Lean warning at line 128: declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry
WARNING   ServerInterface: Lean warning at line 168: declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry
WARNING   ServerInterface: Lean warning at line 179: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry
WARNING   ServerInterface: Lean warning at line 191: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 204: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry
WARNING   ServerInterface: Lean warning at line 217: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry
WARNING   ServerInterface: Lean warning at line 267: declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry
WARNING   ServerInterface: Lean warning at line 273: declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 283: declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 288: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry
WARNING   ServerInterface: Lean warning at line 293: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry
WARNING   ServerInterface: Lean warning at line 298: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry
WARNING   ServerInterface: Lean warning at line 305: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 318: declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry
WARNING   ServerInterface: Lean warning at line 326: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry
WARNING   ServerInterface: Lean warning at line 337: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry
WARNING   ServerInterface: Lean warning at line 388: declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry
WARNING   ServerInterface: Lean warning at line 419: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry
WARNING   ServerInterface: Lean warning at line 425: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry
WARNING   ServerInterface: Lean warning at line 438: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry
WARNING   ServerInterface: Lean warning at line 446: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry
WARNING   ServerInterface: Lean warning at line 454: declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry
WARNING   ServerInterface: Lean warning at line 461: declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry
DEBUG     lean           : Rx: {"msgs":[{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":123,"severity":"information","text":"J'appelle le lemme theorie_des_ensembles.definition.egalite_deux_ensembles,\nsur le but, sens direct\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":124,"severity":"information","text":"context:\n¿¿¿object: LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿= TYPE\n¿¿¿object: LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.15.1333¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)\n¿¿¿object: LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.15.1335¿]¿= SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":125,"severity":"information","text":"targets:\n¿¿¿property¿[pp_type: ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C¿]: METAVAR¿[name: _mlocal._fresh.16.706¿]¿= QUANT_∀¿[type: PROP¿]¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿, LOCAL_CONSTANT¿[name: x¿/ identifier: _fresh.16.719¿]¿, PROP_IFF¿[type: PROP¿]¿(PROP_BELONGS¿[type: PROP¿]¿(LOCAL_CONSTANT¿[name: x¿/ identifier: _fresh.16.719¿]¿, SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.15.1333¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.15.1335¿]¿)¿)¿)¿, PROP_BELONGS¿[type: PROP¿]¿(LOCAL_CONSTANT¿[name: x¿/ identifier: _fresh.16.719¿]¿, SET_UNION¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿, LOCAL_CONSTANT¿[name: B¿/ identifier: 0._fresh.15.1333¿]¿)¿, SET_INTER¿[type: SET¿(LOCAL_CONSTANT¿[name: X¿/ identifier: 0._fresh.15.1330¿]¿)¿]¿(LOCAL_CONSTANT¿[name: A¿/ identifier: 0._fresh.15.1331¿]¿, LOCAL_CONSTANT¿[name: C¿/ identifier: 0._fresh.15.1335¿]¿)¿)¿)¿)¿)\n"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":126,"severity":"error","text":"tactic failed, there are unsolved goals\nstate:\nX : Type,\nA B C : set X\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":128,"severity":"warning","text":"declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":168,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":179,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":191,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":204,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":217,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":267,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":273,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":283,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":288,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":293,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":298,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":305,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":318,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":326,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":337,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":388,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":419,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":425,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":438,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":446,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":454,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":462,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry"}],"response":"all_messages"}
INFO      ServerInterface: Got new context
INFO      ServerInterface: Got new targets
ERROR     ServerInterface: Lean error at line 126: tactic failed, there are unsolved goals
state:
X : Type,
A B C : set X
⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C
WARNING   ServerInterface: Lean warning at line 128: declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry
WARNING   ServerInterface: Lean warning at line 168: declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry
WARNING   ServerInterface: Lean warning at line 179: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry
WARNING   ServerInterface: Lean warning at line 191: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 204: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry
WARNING   ServerInterface: Lean warning at line 217: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry
WARNING   ServerInterface: Lean warning at line 267: declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry
WARNING   ServerInterface: Lean warning at line 273: declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 283: declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 288: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry
WARNING   ServerInterface: Lean warning at line 293: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry
WARNING   ServerInterface: Lean warning at line 298: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry
WARNING   ServerInterface: Lean warning at line 305: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 318: declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry
WARNING   ServerInterface: Lean warning at line 326: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry
WARNING   ServerInterface: Lean warning at line 337: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry
WARNING   ServerInterface: Lean warning at line 388: declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry
WARNING   ServerInterface: Lean warning at line 419: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry
WARNING   ServerInterface: Lean warning at line 425: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry
WARNING   ServerInterface: Lean warning at line 438: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry
WARNING   ServerInterface: Lean warning at line 446: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry
WARNING   ServerInterface: Lean warning at line 454: declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry
WARNING   ServerInterface: Lean warning at line 462: declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Tx : {"file_name": "theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter", "content": "import data.set\nimport tactic\n\n-- dEAduction imports\nimport structures2\nimport definitions\n\n-- General principles :\n-- Type should be defined as parameters, in order to be implicit everywhere\n-- other parameters are implicit in definitions, i.e. defined using '{}' (e.g. {A : set X} )\n-- but explicit everywhere else, i.e. defined using '()' (e.g. (A : set X) )\n-- each definition must be an iff statement (since it will be called with 'rw' or 'symp_rw')\n\n\n\nlocal attribute [instance] classical.prop_decidable\n---------------------------------------------\n-- global parameters = implicit variables --\n---------------------------------------------\nsection course\nparameters {X Y Z: Type}\n\n\n------------------\n-- COURSE TITLE --\n------------------\nnamespace theorie_des_ensembles\n/- dEAduction\nPrettyName\n    Th\u00e9orie des ensembles\n-/\n\n\n------------------------\n-- COURSE DEFINITIONS --\n------------------------\nlemma definition.inclusion {A B : set X} : A \u2286 B \u2194 \u2200 {x:X}, x \u2208 A \u2192 x \u2208 B :=\niff.rfl\n\nlemma definition.egalite_deux_ensembles {A A' : set X} :\n(A = A') \u2194 ( \u2200 x, x \u2208 A \u2194 x \u2208 A' ) :=\n/- dEAduction\nPrettyName\n    egalit\u00e9 de deux ensembles\n-/\nby exact set.ext_iff\n\nlemma theorem.double_inclusion (A A' : set X) :\n(A \u2286 A' \u2227 A' \u2286 A) \u2192 A = A' :=\n/- dEAduction\nPrettyName\n    Double inclusion\n-/\nbegin\n    exact set.subset.antisymm_iff.mpr\nend\n\n---------------\n-- SECTION 1 --\n---------------\nnamespace unions_et_intersections\n-- variables unions_et_intersections --\nvariables {A B C : set X}\n\n-----------------\n-- DEFINITIONS --\n-----------------\nlemma definition.intersection_deux_ensembles {A B : set X} {x : X} :\nx \u2208 A \u2229 B \u2194 ( x \u2208 A \u2227 x \u2208 B) :=\niff.rfl\n/- dEAduction\nPrettyName\n    Intersection de deux ensembles\n-/\n\nlemma definition.intersection_quelconque_ensembles {I : Type} {E : I \u2192 set X}  {x : X} :\n(x \u2208 set.Inter (\u03bb i, E i)) \u2194 (\u2200 i:I, x \u2208 E i) :=\nset.mem_Inter\n/- dEAduction\nPrettyName\n    Intersection d'une famille d'ensembles quelconque\n-/\n\nlemma definition.union_deux_ensembles  {A : set X} {B : set X} {x : X} :\nx \u2208 A \u222a B \u2194 ( x \u2208 A \u2228 x \u2208 B) :=\niff.rfl\n/- dEAduction\nPrettyName\n    Union de deux ensembles\n-/\n\nlemma definition.union_quelconque_ensembles {I : Type} {E : I \u2192 set X}  {x : X} :\n(x \u2208 set.Union (\u03bb i, E i)) \u2194 (\u2203 i:I, x \u2208 E i) :=\nset.mem_Union\n/- dEAduction\nPrettyName\n    Union d'une famille d'ensembles quelconque\n-/\n\n\n---------------\n-- EXERCICES --\n---------------\nlemma exercise.union_distributive_inter : A \u2229 (B \u222a C)  = (A \u2229 B) \u222a (A \u2229 C) :=\n/- dEAduction\nPrettyName\n    Intersection avec une union\nDescription\n    L'intersection est distributive par rapport \u00e0 l'union\nTools->Logic\n    $ALL -negate\nTools->ProofTechniques\n    $ALL -contradiction\nTools->Definitions\n    $UNTIL_NOW -union_quelconque_ensembles -intersection_quelconque_ensembles\nTools->Theorems\n    double_inclusion\nExpectedVarsNumber\n    X=3, A=1, B=1\n-/\n\nbegin\ndefi theorie_des_ensembles.definition.egalite_deux_ensembles <|> simp_rw theorie_des_ensembles.definition.egalite_deux_ensembles <|> simp_rw <- theorie_des_ensembles.definition.egalite_deux_ensembles,\ndefi theorie_des_ensembles.definition.egalite_deux_ensembles at C <|> simp_rw theorie_des_ensembles.definition.egalite_deux_ensembles at C <|> simp_rw <- theorie_des_ensembles.definition.egalite_deux_ensembles at C,\nhypo_analysis,\ntargets_analysis,\nend\n\nlemma exercise.inter_distributive_union : A \u222a (B \u2229 C)  = (A \u222a B) \u2229 (A \u222a C) :=\n/- dEAduction\nPrettyName\n    Union avec une intersection\nDescription\n    L'union est distributive par rapport \u00e0 l'intersection\n-/\nbegin\n    sorry\nend\n\nend unions_et_intersections\n\n\n---------------\n-- SECTION 2 --\n---------------\nnamespace complementaire\n-- variables complementaire --\nvariables  {A B : set X}\nvariables {I : Type} {E F : I \u2192 set X}\nnotation `\u2201`A := set.compl A\n\n-----------------\n-- DEFINITIONS --\n-----------------\nlemma definition.complement {A : set X} {x : X} : x \u2208 set.compl A \u2194 x \u2209 A :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire\n-/\nby finish\n\n--lemma definition.difference_d_ensembles {A B : set X} {x : X} : x \u2208 B \\ A \u2194 (x \u2208 B \u2227 x \u2209 A) :=\n-- iff.rfl\n\n\n---------------\n-- EXERCICES --\n---------------\nlemma exercise.complement_complement : (set.compl (set.compl A)) = A :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire du compl\u00e9mentaire\nDescription\n    Tout ensemble est \u00e9gal au compl\u00e9mentaire de son compl\u00e9mentaire\n-/\nbegin\n    sorry\nend\n\nlemma exercise.complement_union_deux :\nset.compl (A \u222a B) = (set.compl A) \u2229 (set.compl B) :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire d'union I\nDescription\n    Le compl\u00e9mentaire de l'union de deux ensembles \u00e9gale l'intersection des compl\u00e9mentaires\n-/\nbegin\n    sorry\nend\n\nlemma exercise.complement_union_quelconque :\nset.compl (set.Union (\u03bb i, E i)) = set.Inter (\u03bb i, set.compl (E i)) :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire d'union II\nDescription\n    Le compl\u00e9mentaire d'une r\u00e9union quelconque \u00e9gale l'intersection des compl\u00e9mentaires\n-/\nbegin\n    sorry\nend\n\n\nlemma exercise.inclusion_complement_I :\nA \u2286 B \u2192 set.compl B \u2286 set.compl A\n:=\n/- dEAduction\nPrettyName\n    Le passage au compl\u00e9mentaire renverse les inclusions, implication\nDescription\n    Si A est inclus dans B, alors le compl\u00e9mentaire de A contient le compl\u00e9mentaire de B\n-/\nbegin\n    sorry\nend\n\nlemma exercise.inclusion_complement_II :\nA \u2286 B \u2194 set.compl B \u2286 set.compl A\n:=\n/- dEAduction\nPrettyName\n    Le passage au compl\u00e9mentaire renverse les inclusions, \u00e9quivalence\nDescription\n    Si A est inclus dans B, alors le compl\u00e9mentaire de A contient le compl\u00e9mentaire de B\n-/\nbegin\n    sorry\nend\n\n/- Autres : diff\u00e9rence-/\n\nend complementaire\n\n\n\n-- Ajouter : 3. produit cart\u00e9sien, 4. relations ?\n-- comment d\u00e9finit-on un produit cart\u00e9sien d'ensembles ?\n\n\n\n---------------\n-- SECTION 3 --\n---------------\nnamespace applications_I\n/- dEAduction\nPrettyName\n    Applications et op\u00e9rations ensemblistes\n-/\n\n\n-- variables applications --\nnotation f `\u27ee` A `\u27ef` := f '' A\nnotation f `\u207b\u00b9\u27ee` A `\u27ef` := f  \u207b\u00b9' A\n\nvariables  {A A': set X}\nvariables {f: X \u2192 Y} {B B': set Y}\nvariables {I : Type} {E : I \u2192 set X} {F : I \u2192 set Y}\n\n-- a-t-on besoin de ceci ?\n-- lemma theorem.egalite_fonctions : f = f' \u2194 \u2200 x : X, f(x) = f'(x) :=\n--  function.funext_iff\n\n\n-----------------\n-- DEFINITIONS --\n-----------------\nlemma definition.image_directe (y : Y) : y \u2208 f '' A \u2194 \u2203 x : X, x \u2208 A \u2227  f x = y :=\n/- dEAduction -/\nbegin\n    sorry\nend\n\nlemma definition.image_reciproque (x:X) : x \u2208 f  \u207b\u00b9' B \u2194 f(x) \u2208 B :=\n/- dEAduction -/\nbegin\n    sorry\nend\n\n\n---------------\n-- EXERCICES --\n---------------\nlemma exercise.image_de_reciproque : f '' (f \u207b\u00b9' B)  \u2286 B :=\nbegin\n    sorry\nend\n\nlemma exercise.reciproque_de_image : A \u2286 f \u207b\u00b9' (f '' A) :=\nbegin\n    sorry\nend\n\nlemma exercise.image_reciproque_inter :  f \u207b\u00b9'  (B\u2229B') = f \u207b\u00b9'  (B) \u2229 f \u207b\u00b9'  (B') :=\nbegin\n    sorry\nend\n\nlemma  exercise.image_reciproque_union  : f \u207b\u00b9' (B \u222a B') = f \u207b\u00b9' B \u222a f \u207b\u00b9' B'\n:=\nbegin\n    sorry\nend\n\nset_option pp.width 100\nlemma exercise.image_reciproque_inter_quelconque :\n(f \u207b\u00b9'  (set.Inter (\u03bb i, F i))) = set.Inter (\u03bb i, f \u207b\u00b9' (F i))\n:=\n/- dEAduction\nPrettyName\n\n-/\nbegin\n    sorry\nend\n\n/- Idem union quelconques -/\n\nlemma exercise.image_inter_inclus_inter_images :\nf '' (A\u2229A') \u2286 f '' (A) \u2229 f '' (A')\n:=\nbegin\n    sorry\nend\n\n\nlemma exercise.reciproque_complementaire_I :\nf \u207b\u00b9' (set.compl B) \u2286 set.compl (f \u207b\u00b9' B)\n:=\n/- dEAduction\nPrettyName\n    Image r\u00e9ciproque du compl\u00e9mentaire, inclusion\n-/\nbegin\n    sorry\nend\n\nlemma exercise.reciproque_complementaire_II :\nf \u207b\u00b9' (set.compl B) = set.compl (f \u207b\u00b9' B)\n:=\n/- dEAduction\nPrettyName\n    Image r\u00e9ciproque du compl\u00e9mentaire, \u00e9galit\u00e9\n-/\nbegin\n    sorry\nend\n\nend applications_I\n\n----------------\n-- SUBSECTION --\n----------------\nnamespace applications_II\n/- dEAduction\nPrettyName\n    Injections et surjections\n-/\n\n-- variables injections_surjections --\nvariables (f: X \u2192 Y) (g : Y \u2192 Z) (h : X \u2192 Z)\n\n-----------------\n-- DEFINITIONS --\n-----------------\nnamespace definitions\ndef injective {X Y : Type} (f\u2080 : X \u2192 Y) := \u2200 x y : X, (f\u2080 x = f\u2080 y \u2192 x = y)\ndef surjective {X Y : Type} (f\u2080 : X \u2192 Y) := \u2200 y : Y, \u2203 x : X, f\u2080 x = y\ndef composition {X Y Z : Type} (g\u2080 : Y \u2192 Z) (f\u2080 : X \u2192 Y) := \u03bbx:X, g\u2080 (f\u2080 x)\ndef Identite {X : Type} := \u03bb x:X, x\n\nnotation g `\u2218` f := composition g f\n\n\nlemma definition.injectivite :\ninjective f \u2194 \u2200 x y : X, (f x = f y \u2192 x = y)\n:=\nbegin\n    unfold injective,\nend\n\nlemma definition.surjectivite :\nsurjective f \u2194 \u2200 y : Y, \u2203 x : X, f x = y\n:=\nbegin\n    unfold surjective,\nend\n\nlemma definition.composition :\n\u2200 x:X, composition g f x = g (f x)\n:=\nbegin\n    sorry\nend\n\nlemma definition.egalite_fonctions (f' : X \u2192 Y) :\nf = f' \u2194 \u2200 x, f x = f' x :=\nbegin\n    exact function.funext_iff,\nend\n\n\nlemma definition.Identite (f\u2080: X \u2192 X) :\nf\u2080 = Identite \u2194 \u2200 x, f\u2080 x = x :=\nbegin\n    apply definition.egalite_fonctions,\nend\n\nend definitions\n\n\n---------------\n-- EXERCICES --\n---------------\n\n------------------\nnamespace inverses\nopen applications_II.definitions\n\nlemma exercise.injective_ssi_inverse_gauche : (injective f) \u2194\n\u2203 F: Y \u2192 X, (composition F f) = Identite :=\nbegin\n    sorry\nend\n\nlemma exercise.surjective_ssi_inverse_droite : (surjective f) \u2194\n\u2203 F: Y \u2192 X, (composition f F) = Identite :=\nbegin\n    sorry\nend\n\n\nend inverses\n\n---------------------\nnamespace composition\nopen applications_II.definitions\n\nlemma exercise.composition_injections\n(H1 : injective (\u03bbx:X, f x)) (H2 : injective g) :\ninjective (composition g f)\n:=\nbegin\n    sorry\nend\n\nlemma exercise.composition_surjections\n(H1 : surjective f) (H2 : surjective g) :\nsurjective (composition g f)\n:=\nbegin\n    sorry\nend\n\nlemma exercise.injective_si_coompo_injective\n(H1 : injective (composition g f)) :\ninjective f\n:=\nbegin\n    sorry\nend\n\nlemma exercise.surjective_si_coompo_surjective\n(H1 : surjective (composition g f)) :\nsurjective g\n:=\nbegin\n    sorry\nend\n\nend composition\n\nend applications_II\n\nend theorie_des_ensembles\n\nend course", "seq_num": 2, "command": "sync"}
DEBUG     lean           : Rx: {"message":"file invalidated","response":"ok","seq_num":2}
DEBUG     lean           : Rx: {"msgs":[{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":123,"severity":"information","text":"J'appelle le lemme theorie_des_ensembles.definition.egalite_deux_ensembles,\nsur le but, sens direct\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":124,"severity":"information","text":"J'appelle le lemme theorie_des_ensembles.definition.egalite_deux_ensembles,\n"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":143,"pos_line":124,"severity":"error","text":"simplify tactic failed to simplify\nstate:\nX : Type,\nA B C : set X\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":129,"severity":"warning","text":"declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":169,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":180,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":192,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":205,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":218,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":267,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":273,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":283,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":288,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":293,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":298,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":305,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":318,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":326,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":337,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":388,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":419,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":425,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":438,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":446,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":454,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":462,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry"}],"response":"all_messages"}
ERROR     ServerInterface: Lean error at line 124: simplify tactic failed to simplify
state:
X : Type,
A B C : set X
⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C
WARNING   ServerInterface: Lean warning at line 129: declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry
WARNING   ServerInterface: Lean warning at line 169: declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry
WARNING   ServerInterface: Lean warning at line 180: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry
WARNING   ServerInterface: Lean warning at line 192: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 205: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry
WARNING   ServerInterface: Lean warning at line 218: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry
WARNING   ServerInterface: Lean warning at line 267: declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry
WARNING   ServerInterface: Lean warning at line 273: declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 283: declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 288: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry
WARNING   ServerInterface: Lean warning at line 293: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry
WARNING   ServerInterface: Lean warning at line 298: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry
WARNING   ServerInterface: Lean warning at line 305: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 318: declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry
WARNING   ServerInterface: Lean warning at line 326: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry
WARNING   ServerInterface: Lean warning at line 337: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry
WARNING   ServerInterface: Lean warning at line 388: declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry
WARNING   ServerInterface: Lean warning at line 419: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry
WARNING   ServerInterface: Lean warning at line 425: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry
WARNING   ServerInterface: Lean warning at line 438: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry
WARNING   ServerInterface: Lean warning at line 446: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry
WARNING   ServerInterface: Lean warning at line 454: declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry
WARNING   ServerInterface: Lean warning at line 462: declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry
DEBUG     ServerInterface: Proof State received
DEBUG     ServerInterface: After request
INFO      deaduction.pylib.mathobj.proof_state: creating new ProofState from lean strings
WARNING   deaduction.pylib.mathobj.proof_state: No target found! targets_analysis =
INFO      deaduction.pylib.mathobj.proof_state: comparing and tagging old goal and new goal
Traceback (most recent call last):
  File "/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/src/deaduction/dui/widgets/exercise_widgets.py", line 772, in update_proof_state
    self.update_goal(proofstate.goals[0])
  File "/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/src/deaduction/dui/widgets/exercise_widgets.py", line 472, in update_goal
    Goal.compare(new_goal, old_goal, goal_is_new=False)  # set tags
  File "/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/src/deaduction/pylib/mathobj/proof_state.py", line 80, in compare
    new_context = new_goal.context.copy()
AttributeError: 'NoneType' object has no attribute 'context'
DEBUG     lean           : Tx : {"file_name": "theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter", "content": "import data.set\nimport tactic\n\n-- dEAduction imports\nimport structures2\nimport definitions\n\n-- General principles :\n-- Type should be defined as parameters, in order to be implicit everywhere\n-- other parameters are implicit in definitions, i.e. defined using '{}' (e.g. {A : set X} )\n-- but explicit everywhere else, i.e. defined using '()' (e.g. (A : set X) )\n-- each definition must be an iff statement (since it will be called with 'rw' or 'symp_rw')\n\n\n\nlocal attribute [instance] classical.prop_decidable\n---------------------------------------------\n-- global parameters = implicit variables --\n---------------------------------------------\nsection course\nparameters {X Y Z: Type}\n\n\n------------------\n-- COURSE TITLE --\n------------------\nnamespace theorie_des_ensembles\n/- dEAduction\nPrettyName\n    Th\u00e9orie des ensembles\n-/\n\n\n------------------------\n-- COURSE DEFINITIONS --\n------------------------\nlemma definition.inclusion {A B : set X} : A \u2286 B \u2194 \u2200 {x:X}, x \u2208 A \u2192 x \u2208 B :=\niff.rfl\n\nlemma definition.egalite_deux_ensembles {A A' : set X} :\n(A = A') \u2194 ( \u2200 x, x \u2208 A \u2194 x \u2208 A' ) :=\n/- dEAduction\nPrettyName\n    egalit\u00e9 de deux ensembles\n-/\nby exact set.ext_iff\n\nlemma theorem.double_inclusion (A A' : set X) :\n(A \u2286 A' \u2227 A' \u2286 A) \u2192 A = A' :=\n/- dEAduction\nPrettyName\n    Double inclusion\n-/\nbegin\n    exact set.subset.antisymm_iff.mpr\nend\n\n---------------\n-- SECTION 1 --\n---------------\nnamespace unions_et_intersections\n-- variables unions_et_intersections --\nvariables {A B C : set X}\n\n-----------------\n-- DEFINITIONS --\n-----------------\nlemma definition.intersection_deux_ensembles {A B : set X} {x : X} :\nx \u2208 A \u2229 B \u2194 ( x \u2208 A \u2227 x \u2208 B) :=\niff.rfl\n/- dEAduction\nPrettyName\n    Intersection de deux ensembles\n-/\n\nlemma definition.intersection_quelconque_ensembles {I : Type} {E : I \u2192 set X}  {x : X} :\n(x \u2208 set.Inter (\u03bb i, E i)) \u2194 (\u2200 i:I, x \u2208 E i) :=\nset.mem_Inter\n/- dEAduction\nPrettyName\n    Intersection d'une famille d'ensembles quelconque\n-/\n\nlemma definition.union_deux_ensembles  {A : set X} {B : set X} {x : X} :\nx \u2208 A \u222a B \u2194 ( x \u2208 A \u2228 x \u2208 B) :=\niff.rfl\n/- dEAduction\nPrettyName\n    Union de deux ensembles\n-/\n\nlemma definition.union_quelconque_ensembles {I : Type} {E : I \u2192 set X}  {x : X} :\n(x \u2208 set.Union (\u03bb i, E i)) \u2194 (\u2203 i:I, x \u2208 E i) :=\nset.mem_Union\n/- dEAduction\nPrettyName\n    Union d'une famille d'ensembles quelconque\n-/\n\n\n---------------\n-- EXERCICES --\n---------------\nlemma exercise.union_distributive_inter : A \u2229 (B \u222a C)  = (A \u2229 B) \u222a (A \u2229 C) :=\n/- dEAduction\nPrettyName\n    Intersection avec une union\nDescription\n    L'intersection est distributive par rapport \u00e0 l'union\nTools->Logic\n    $ALL -negate\nTools->ProofTechniques\n    $ALL -contradiction\nTools->Definitions\n    $UNTIL_NOW -union_quelconque_ensembles -intersection_quelconque_ensembles\nTools->Theorems\n    double_inclusion\nExpectedVarsNumber\n    X=3, A=1, B=1\n-/\n\nbegin\ndefi theorie_des_ensembles.definition.egalite_deux_ensembles <|> simp_rw theorie_des_ensembles.definition.egalite_deux_ensembles <|> simp_rw <- theorie_des_ensembles.definition.egalite_deux_ensembles,\nhypo_analysis,\ntargets_analysis,\nend\n\nlemma exercise.inter_distributive_union : A \u222a (B \u2229 C)  = (A \u222a B) \u2229 (A \u222a C) :=\n/- dEAduction\nPrettyName\n    Union avec une intersection\nDescription\n    L'union est distributive par rapport \u00e0 l'intersection\n-/\nbegin\n    sorry\nend\n\nend unions_et_intersections\n\n\n---------------\n-- SECTION 2 --\n---------------\nnamespace complementaire\n-- variables complementaire --\nvariables  {A B : set X}\nvariables {I : Type} {E F : I \u2192 set X}\nnotation `\u2201`A := set.compl A\n\n-----------------\n-- DEFINITIONS --\n-----------------\nlemma definition.complement {A : set X} {x : X} : x \u2208 set.compl A \u2194 x \u2209 A :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire\n-/\nby finish\n\n--lemma definition.difference_d_ensembles {A B : set X} {x : X} : x \u2208 B \\ A \u2194 (x \u2208 B \u2227 x \u2209 A) :=\n-- iff.rfl\n\n\n---------------\n-- EXERCICES --\n---------------\nlemma exercise.complement_complement : (set.compl (set.compl A)) = A :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire du compl\u00e9mentaire\nDescription\n    Tout ensemble est \u00e9gal au compl\u00e9mentaire de son compl\u00e9mentaire\n-/\nbegin\n    sorry\nend\n\nlemma exercise.complement_union_deux :\nset.compl (A \u222a B) = (set.compl A) \u2229 (set.compl B) :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire d'union I\nDescription\n    Le compl\u00e9mentaire de l'union de deux ensembles \u00e9gale l'intersection des compl\u00e9mentaires\n-/\nbegin\n    sorry\nend\n\nlemma exercise.complement_union_quelconque :\nset.compl (set.Union (\u03bb i, E i)) = set.Inter (\u03bb i, set.compl (E i)) :=\n/- dEAduction\nPrettyName\n    Compl\u00e9mentaire d'union II\nDescription\n    Le compl\u00e9mentaire d'une r\u00e9union quelconque \u00e9gale l'intersection des compl\u00e9mentaires\n-/\nbegin\n    sorry\nend\n\n\nlemma exercise.inclusion_complement_I :\nA \u2286 B \u2192 set.compl B \u2286 set.compl A\n:=\n/- dEAduction\nPrettyName\n    Le passage au compl\u00e9mentaire renverse les inclusions, implication\nDescription\n    Si A est inclus dans B, alors le compl\u00e9mentaire de A contient le compl\u00e9mentaire de B\n-/\nbegin\n    sorry\nend\n\nlemma exercise.inclusion_complement_II :\nA \u2286 B \u2194 set.compl B \u2286 set.compl A\n:=\n/- dEAduction\nPrettyName\n    Le passage au compl\u00e9mentaire renverse les inclusions, \u00e9quivalence\nDescription\n    Si A est inclus dans B, alors le compl\u00e9mentaire de A contient le compl\u00e9mentaire de B\n-/\nbegin\n    sorry\nend\n\n/- Autres : diff\u00e9rence-/\n\nend complementaire\n\n\n\n-- Ajouter : 3. produit cart\u00e9sien, 4. relations ?\n-- comment d\u00e9finit-on un produit cart\u00e9sien d'ensembles ?\n\n\n\n---------------\n-- SECTION 3 --\n---------------\nnamespace applications_I\n/- dEAduction\nPrettyName\n    Applications et op\u00e9rations ensemblistes\n-/\n\n\n-- variables applications --\nnotation f `\u27ee` A `\u27ef` := f '' A\nnotation f `\u207b\u00b9\u27ee` A `\u27ef` := f  \u207b\u00b9' A\n\nvariables  {A A': set X}\nvariables {f: X \u2192 Y} {B B': set Y}\nvariables {I : Type} {E : I \u2192 set X} {F : I \u2192 set Y}\n\n-- a-t-on besoin de ceci ?\n-- lemma theorem.egalite_fonctions : f = f' \u2194 \u2200 x : X, f(x) = f'(x) :=\n--  function.funext_iff\n\n\n-----------------\n-- DEFINITIONS --\n-----------------\nlemma definition.image_directe (y : Y) : y \u2208 f '' A \u2194 \u2203 x : X, x \u2208 A \u2227  f x = y :=\n/- dEAduction -/\nbegin\n    sorry\nend\n\nlemma definition.image_reciproque (x:X) : x \u2208 f  \u207b\u00b9' B \u2194 f(x) \u2208 B :=\n/- dEAduction -/\nbegin\n    sorry\nend\n\n\n---------------\n-- EXERCICES --\n---------------\nlemma exercise.image_de_reciproque : f '' (f \u207b\u00b9' B)  \u2286 B :=\nbegin\n    sorry\nend\n\nlemma exercise.reciproque_de_image : A \u2286 f \u207b\u00b9' (f '' A) :=\nbegin\n    sorry\nend\n\nlemma exercise.image_reciproque_inter :  f \u207b\u00b9'  (B\u2229B') = f \u207b\u00b9'  (B) \u2229 f \u207b\u00b9'  (B') :=\nbegin\n    sorry\nend\n\nlemma  exercise.image_reciproque_union  : f \u207b\u00b9' (B \u222a B') = f \u207b\u00b9' B \u222a f \u207b\u00b9' B'\n:=\nbegin\n    sorry\nend\n\nset_option pp.width 100\nlemma exercise.image_reciproque_inter_quelconque :\n(f \u207b\u00b9'  (set.Inter (\u03bb i, F i))) = set.Inter (\u03bb i, f \u207b\u00b9' (F i))\n:=\n/- dEAduction\nPrettyName\n\n-/\nbegin\n    sorry\nend\n\n/- Idem union quelconques -/\n\nlemma exercise.image_inter_inclus_inter_images :\nf '' (A\u2229A') \u2286 f '' (A) \u2229 f '' (A')\n:=\nbegin\n    sorry\nend\n\n\nlemma exercise.reciproque_complementaire_I :\nf \u207b\u00b9' (set.compl B) \u2286 set.compl (f \u207b\u00b9' B)\n:=\n/- dEAduction\nPrettyName\n    Image r\u00e9ciproque du compl\u00e9mentaire, inclusion\n-/\nbegin\n    sorry\nend\n\nlemma exercise.reciproque_complementaire_II :\nf \u207b\u00b9' (set.compl B) = set.compl (f \u207b\u00b9' B)\n:=\n/- dEAduction\nPrettyName\n    Image r\u00e9ciproque du compl\u00e9mentaire, \u00e9galit\u00e9\n-/\nbegin\n    sorry\nend\n\nend applications_I\n\n----------------\n-- SUBSECTION --\n----------------\nnamespace applications_II\n/- dEAduction\nPrettyName\n    Injections et surjections\n-/\n\n-- variables injections_surjections --\nvariables (f: X \u2192 Y) (g : Y \u2192 Z) (h : X \u2192 Z)\n\n-----------------\n-- DEFINITIONS --\n-----------------\nnamespace definitions\ndef injective {X Y : Type} (f\u2080 : X \u2192 Y) := \u2200 x y : X, (f\u2080 x = f\u2080 y \u2192 x = y)\ndef surjective {X Y : Type} (f\u2080 : X \u2192 Y) := \u2200 y : Y, \u2203 x : X, f\u2080 x = y\ndef composition {X Y Z : Type} (g\u2080 : Y \u2192 Z) (f\u2080 : X \u2192 Y) := \u03bbx:X, g\u2080 (f\u2080 x)\ndef Identite {X : Type} := \u03bb x:X, x\n\nnotation g `\u2218` f := composition g f\n\n\nlemma definition.injectivite :\ninjective f \u2194 \u2200 x y : X, (f x = f y \u2192 x = y)\n:=\nbegin\n    unfold injective,\nend\n\nlemma definition.surjectivite :\nsurjective f \u2194 \u2200 y : Y, \u2203 x : X, f x = y\n:=\nbegin\n    unfold surjective,\nend\n\nlemma definition.composition :\n\u2200 x:X, composition g f x = g (f x)\n:=\nbegin\n    sorry\nend\n\nlemma definition.egalite_fonctions (f' : X \u2192 Y) :\nf = f' \u2194 \u2200 x, f x = f' x :=\nbegin\n    exact function.funext_iff,\nend\n\n\nlemma definition.Identite (f\u2080: X \u2192 X) :\nf\u2080 = Identite \u2194 \u2200 x, f\u2080 x = x :=\nbegin\n    apply definition.egalite_fonctions,\nend\n\nend definitions\n\n\n---------------\n-- EXERCICES --\n---------------\n\n------------------\nnamespace inverses\nopen applications_II.definitions\n\nlemma exercise.injective_ssi_inverse_gauche : (injective f) \u2194\n\u2203 F: Y \u2192 X, (composition F f) = Identite :=\nbegin\n    sorry\nend\n\nlemma exercise.surjective_ssi_inverse_droite : (surjective f) \u2194\n\u2203 F: Y \u2192 X, (composition f F) = Identite :=\nbegin\n    sorry\nend\n\n\nend inverses\n\n---------------------\nnamespace composition\nopen applications_II.definitions\n\nlemma exercise.composition_injections\n(H1 : injective (\u03bbx:X, f x)) (H2 : injective g) :\ninjective (composition g f)\n:=\nbegin\n    sorry\nend\n\nlemma exercise.composition_surjections\n(H1 : surjective f) (H2 : surjective g) :\nsurjective (composition g f)\n:=\nbegin\n    sorry\nend\n\nlemma exercise.injective_si_coompo_injective\n(H1 : injective (composition g f)) :\ninjective f\n:=\nbegin\n    sorry\nend\n\nlemma exercise.surjective_si_coompo_surjective\n(H1 : surjective (composition g f)) :\nsurjective g\n:=\nbegin\n    sorry\nend\n\nend composition\n\nend applications_II\n\nend theorie_des_ensembles\n\nend course", "seq_num": 3, "command": "sync"}
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"theorie_des_ensembles.complementaire.definition.complement","end_pos_col":0,"end_pos_line":169,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":155},{"desc":"theorie_des_ensembles.complementaire.definition.complement","end_pos_col":0,"end_pos_line":169,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":155},{"desc":"theorie_des_ensembles.complementaire.definition.complement","end_pos_col":0,"end_pos_line":169,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":155},{"desc":"theorie_des_ensembles.applications_I.definition.image_directe","end_pos_col":0,"end_pos_line":274,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":268},{"desc":"theorie_des_ensembles.applications_I.definition.image_directe","end_pos_col":0,"end_pos_line":274,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":268},{"desc":"theorie_des_ensembles.applications_I.definition.image_reciproque","end_pos_col":0,"end_pos_line":284,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":274},{"desc":"theorie_des_ensembles.applications_I.definition.image_reciproque","end_pos_col":0,"end_pos_line":284,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":274},{"desc":"theorie_des_ensembles.applications_I.definition.image_reciproque","end_pos_col":0,"end_pos_line":284,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":274},{"desc":"theorie_des_ensembles.applications_I.exercise.image_de_reciproque","end_pos_col":0,"end_pos_line":289,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":284},{"desc":"theorie_des_ensembles.applications_I.exercise.image_de_reciproque","end_pos_col":0,"end_pos_line":289,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":284},{"desc":"theorie_des_ensembles.applications_I.exercise.image_de_reciproque","end_pos_col":0,"end_pos_line":289,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":284},{"desc":"theorie_des_ensembles.applications_I.exercise.reciproque_de_image","end_pos_col":0,"end_pos_line":294,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":289},{"desc":"theorie_des_ensembles.applications_I.exercise.reciproque_de_image","end_pos_col":0,"end_pos_line":294,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":289},{"desc":"theorie_des_ensembles.applications_I.exercise.reciproque_de_image","end_pos_col":0,"end_pos_line":294,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":289},{"desc":"parsing at line 294","end_pos_col":11,"end_pos_line":477,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":294}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"msgs":[{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":123,"severity":"information","text":"J'appelle le lemme theorie_des_ensembles.definition.egalite_deux_ensembles,\nsur le but, sens direct\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":124,"severity":"information","text":"J'appelle le lemme theorie_des_ensembles.definition.egalite_deux_ensembles,\n"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":143,"pos_line":124,"severity":"error","text":"simplify tactic failed to simplify\nstate:\nX : Type,\nA B C : set X\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":129,"severity":"warning","text":"declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":169,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":180,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":192,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":205,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":218,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":267,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":273,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":283,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":288,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":293,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":298,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":305,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":318,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":326,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":337,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":388,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":419,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":425,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":438,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":446,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":454,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":462,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry"}],"response":"all_messages"}
ERROR     ServerInterface: Lean error at line 124: simplify tactic failed to simplify
state:
X : Type,
A B C : set X
⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C
WARNING   ServerInterface: Lean warning at line 129: declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry
WARNING   ServerInterface: Lean warning at line 169: declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry
WARNING   ServerInterface: Lean warning at line 180: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry
WARNING   ServerInterface: Lean warning at line 192: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 205: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry
WARNING   ServerInterface: Lean warning at line 218: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry
WARNING   ServerInterface: Lean warning at line 267: declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry
WARNING   ServerInterface: Lean warning at line 273: declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 283: declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 288: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry
WARNING   ServerInterface: Lean warning at line 293: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry
WARNING   ServerInterface: Lean warning at line 298: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry
WARNING   ServerInterface: Lean warning at line 305: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 318: declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry
WARNING   ServerInterface: Lean warning at line 326: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry
WARNING   ServerInterface: Lean warning at line 337: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry
WARNING   ServerInterface: Lean warning at line 388: declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry
WARNING   ServerInterface: Lean warning at line 419: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry
WARNING   ServerInterface: Lean warning at line 425: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry
WARNING   ServerInterface: Lean warning at line 438: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry
WARNING   ServerInterface: Lean warning at line 446: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry
WARNING   ServerInterface: Lean warning at line 454: declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry
WARNING   ServerInterface: Lean warning at line 462: declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry
DEBUG     lean           : Rx: {"msgs":[{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":123,"severity":"information","text":"J'appelle le lemme theorie_des_ensembles.definition.egalite_deux_ensembles,\nsur le but, sens direct\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":124,"severity":"information","text":"J'appelle le lemme theorie_des_ensembles.definition.egalite_deux_ensembles,\n"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":143,"pos_line":124,"severity":"error","text":"simplify tactic failed to simplify\nstate:\nX : Type,\nA B C : set X\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":129,"severity":"warning","text":"declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":169,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":180,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":192,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":205,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":218,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":268,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":274,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":284,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":289,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":294,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":299,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":306,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":319,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":327,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":338,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":388,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":419,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":425,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":438,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":446,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":454,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":462,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry"}],"response":"all_messages"}
ERROR     ServerInterface: Lean error at line 124: simplify tactic failed to simplify
state:
X : Type,
A B C : set X
⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C
WARNING   ServerInterface: Lean warning at line 129: declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry
WARNING   ServerInterface: Lean warning at line 169: declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry
WARNING   ServerInterface: Lean warning at line 180: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry
WARNING   ServerInterface: Lean warning at line 192: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 205: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry
WARNING   ServerInterface: Lean warning at line 218: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry
WARNING   ServerInterface: Lean warning at line 268: declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry
WARNING   ServerInterface: Lean warning at line 274: declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 284: declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 289: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry
WARNING   ServerInterface: Lean warning at line 294: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry
WARNING   ServerInterface: Lean warning at line 299: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry
WARNING   ServerInterface: Lean warning at line 306: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 319: declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry
WARNING   ServerInterface: Lean warning at line 327: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry
WARNING   ServerInterface: Lean warning at line 338: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry
WARNING   ServerInterface: Lean warning at line 388: declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry
WARNING   ServerInterface: Lean warning at line 419: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry
WARNING   ServerInterface: Lean warning at line 425: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry
WARNING   ServerInterface: Lean warning at line 438: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry
WARNING   ServerInterface: Lean warning at line 446: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry
WARNING   ServerInterface: Lean warning at line 454: declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry
WARNING   ServerInterface: Lean warning at line 462: declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"theorie_des_ensembles.applications_II.definitions.definition.injectivite","end_pos_col":0,"end_pos_line":382,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":375},{"desc":"theorie_des_ensembles.applications_II.definitions.definition.surjectivite","end_pos_col":0,"end_pos_line":389,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":382},{"desc":"theorie_des_ensembles.applications_II.definitions.definition.surjectivite","end_pos_col":0,"end_pos_line":389,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":382},{"desc":"theorie_des_ensembles.applications_II.definitions.definition.surjectivite","end_pos_col":0,"end_pos_line":389,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":382},{"desc":"theorie_des_ensembles.applications_II.definitions.definition.composition","end_pos_col":0,"end_pos_line":396,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":389},{"desc":"theorie_des_ensembles.applications_II.definitions.definition.egalite_fonctions","end_pos_col":0,"end_pos_line":403,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":396},{"desc":"theorie_des_ensembles.applications_II.definitions.definition.egalite_fonctions","end_pos_col":0,"end_pos_line":403,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":396},{"desc":"theorie_des_ensembles.applications_II.definitions.definition.egalite_fonctions","end_pos_col":0,"end_pos_line":403,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":396},{"desc":"theorie_des_ensembles.applications_II.definitions.definition.Identite","end_pos_col":0,"end_pos_line":409,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":403},{"desc":"theorie_des_ensembles.applications_II.definitions.definition.Identite","end_pos_col":0,"end_pos_line":409,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":403},{"desc":"theorie_des_ensembles.applications_II.definitions.definition.Identite","end_pos_col":0,"end_pos_line":409,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":403},{"desc":"parsing at line 418","end_pos_col":11,"end_pos_line":477,"file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":418}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"msgs":[{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":123,"severity":"information","text":"J'appelle le lemme theorie_des_ensembles.definition.egalite_deux_ensembles,\nsur le but, sens direct\n"},{"caption":"trace output","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":124,"severity":"information","text":"J'appelle le lemme theorie_des_ensembles.definition.egalite_deux_ensembles,\n"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":143,"pos_line":124,"severity":"error","text":"simplify tactic failed to simplify\nstate:\nX : Type,\nA B C : set X\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":129,"severity":"warning","text":"declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":169,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":180,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":192,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":205,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":218,"severity":"warning","text":"declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":268,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":274,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":284,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":289,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":294,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":299,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":306,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":319,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":327,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":338,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":389,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":420,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":426,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":439,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":447,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":455,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry"},{"caption":"","file_name":"theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter","pos_col":0,"pos_line":463,"severity":"warning","text":"declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry"}],"response":"all_messages"}
ERROR     ServerInterface: Lean error at line 124: simplify tactic failed to simplify
state:
X : Type,
A B C : set X
⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C
WARNING   ServerInterface: Lean warning at line 129: declaration 'theorie_des_ensembles.unions_et_intersections.exercise.inter_distributive_union' uses sorry
WARNING   ServerInterface: Lean warning at line 169: declaration 'theorie_des_ensembles.complementaire.exercise.complement_complement' uses sorry
WARNING   ServerInterface: Lean warning at line 180: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_deux' uses sorry
WARNING   ServerInterface: Lean warning at line 192: declaration 'theorie_des_ensembles.complementaire.exercise.complement_union_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 205: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_I' uses sorry
WARNING   ServerInterface: Lean warning at line 218: declaration 'theorie_des_ensembles.complementaire.exercise.inclusion_complement_II' uses sorry
WARNING   ServerInterface: Lean warning at line 268: declaration 'theorie_des_ensembles.applications_I.definition.image_directe' uses sorry
WARNING   ServerInterface: Lean warning at line 274: declaration 'theorie_des_ensembles.applications_I.definition.image_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 284: declaration 'theorie_des_ensembles.applications_I.exercise.image_de_reciproque' uses sorry
WARNING   ServerInterface: Lean warning at line 289: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_de_image' uses sorry
WARNING   ServerInterface: Lean warning at line 294: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter' uses sorry
WARNING   ServerInterface: Lean warning at line 299: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_union' uses sorry
WARNING   ServerInterface: Lean warning at line 306: declaration 'theorie_des_ensembles.applications_I.exercise.image_reciproque_inter_quelconque' uses sorry
WARNING   ServerInterface: Lean warning at line 319: declaration 'theorie_des_ensembles.applications_I.exercise.image_inter_inclus_inter_images' uses sorry
WARNING   ServerInterface: Lean warning at line 327: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_I' uses sorry
WARNING   ServerInterface: Lean warning at line 338: declaration 'theorie_des_ensembles.applications_I.exercise.reciproque_complementaire_II' uses sorry
WARNING   ServerInterface: Lean warning at line 389: declaration 'theorie_des_ensembles.applications_II.definitions.definition.composition' uses sorry
WARNING   ServerInterface: Lean warning at line 420: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.injective_ssi_inverse_gauche' uses sorry
WARNING   ServerInterface: Lean warning at line 426: declaration 'theorie_des_ensembles.applications_II.inverses.exercise.surjective_ssi_inverse_droite' uses sorry
WARNING   ServerInterface: Lean warning at line 439: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_injections' uses sorry
WARNING   ServerInterface: Lean warning at line 447: declaration 'theorie_des_ensembles.applications_II.composition.exercise.composition_surjections' uses sorry
WARNING   ServerInterface: Lean warning at line 455: declaration 'theorie_des_ensembles.applications_II.composition.exercise.injective_si_coompo_injective' uses sorry
WARNING   ServerInterface: Lean warning at line 463: declaration 'theorie_des_ensembles.applications_II.composition.exercise.surjective_si_coompo_surjective' uses sorry
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"message":"file invalidated","response":"ok","seq_num":3}
DEBUG     ServerInterface: Proof State received
DEBUG     ServerInterface: After request
--- Error(FailedRequestError("Failed request to server with errors : \n[   Message(file_name='theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter', severity=<Severity.error: 3>, caption='', text='simplify tactic failed to simplify\\nstate:\\nX : Type,\\nA B C : set X\\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C', pos_line=124, pos_col=143, end_pos_line=None, end_pos_col=None),\n    Message(file_name='theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter', severity=<Severity.error: 3>, caption='', text='simplify tactic failed to simplify\\nstate:\\nX : Type,\\nA B C : set X\\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C', pos_line=124, pos_col=143, end_pos_line=None, end_pos_col=None),\n    Message(file_name='theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter', severity=<Severity.error: 3>, caption='', text='simplify tactic failed to simplify\\nstate:\\nX : Type,\\nA B C : set X\\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C', pos_line=124, pos_col=143, end_pos_line=None, end_pos_col=None)]"))
Traceback (most recent call last):
  File "/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/src/deaduction/dui/widgets/exercise_widgets.py", line 577, in process_async_signal
    await process_function()
  File "/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/src/deaduction/dui/widgets/exercise_widgets.py", line 666, in __server_call_statement
    await self.servint.code_insert(statement.pretty_name, code)
  File "/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/src/deaduction/pylib/server/__init__.py", line 291, in code_insert
    await self.__update()
  File "/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/src/deaduction/pylib/server/__init__.py", line 219, in __update
    raise exceptions.FailedRequestError(errlist)
deaduction.pylib.server.exceptions.FailedRequestError: Failed request to server with errors :
[   Message(file_name='theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter', severity=<Severity.error: 3>, caption='', text='simplify tactic failed to simplify\nstate:\nX : Type,\nA B C : set X\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C', pos_line=124, pos_col=143, end_pos_line=None, end_pos_col=None)]
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/qtrio/_core.py", line 451, in trio_main
    result = await async_fn(*args)
  File "/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/src/deaduction/dui/__main__.py", line 64, in main
    servint.stop() # Good job, buddy
  File "/usr/local/lib/python3.7/site-packages/trio/_core/_run.py", line 741, in __aexit__
    raise combined_error_from_nursery
  File "/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/src/deaduction/dui/widgets/exercise_widgets.py", line 558, in server_task
    emission.args[0]))
  File "/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/src/deaduction/dui/widgets/exercise_widgets.py", line 597, in process_async_signal
    await self.servint.history_undo()
  File "/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/src/deaduction/pylib/server/__init__.py", line 268, in history_undo
    await self.__update()
  File "/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/src/deaduction/pylib/server/__init__.py", line 219, in __update
    raise exceptions.FailedRequestError(errlist)
deaduction.pylib.server.exceptions.FailedRequestError: Failed request to server with errors :
[   Message(file_name='theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter', severity=<Severity.error: 3>, caption='', text='simplify tactic failed to simplify\nstate:\nX : Type,\nA B C : set X\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C', pos_line=124, pos_col=143, end_pos_line=None, end_pos_col=None),
    Message(file_name='theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter', severity=<Severity.error: 3>, caption='', text='simplify tactic failed to simplify\nstate:\nX : Type,\nA B C : set X\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C', pos_line=124, pos_col=143, end_pos_line=None, end_pos_col=None),
    Message(file_name='theorie_des_ensembles.unions_et_intersections.exercise.union_distributive_inter', severity=<Severity.error: 3>, caption='', text='simplify tactic failed to simplify\nstate:\nX : Type,\nA B C : set X\n⊢ ∀ (x : X), x ∈ A ∩ (B ∪ C) ↔ x ∈ A ∩ B ∪ A ∩ C', pos_line=124, pos_col=143, end_pos_line=None, end_pos_col=None)]
