/usr/local/opt/python@3.7/bin/python3.7 "/Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pydev/pydevconsole.py" --mode=client --port=56413
import sys; print('Python %s on %s' % (sys.version, sys.platform))
sys.path.extend(['/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction'])
PyDev console: starting.
Python 3.7.8 (default, Aug  7 2020, 14:52:29)
[Clang 9.0.0 (clang-900.0.39.2)] on darwin
>>> import os
... os.environ['DEADUCTION_USE_COLOR'] = '1'
... runfile('/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/src/deaduction/dui/__main__.py', wdir='/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/')
...
INFO      deaduction.dui.launcher: Selected course: /Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/tests/lean_files/courses/exercices_logique_propositionnelle.lean
INFO      Course initialisation: Parsing file /Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/tests/lean_files/courses/exercices_logique_propositionnelle.lean
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'PrettyName': ' '}}
DEBUG     deaduction.pylib.coursedata.parser_course: got metadata {'metadata': {'Tools->ProofTechniques': ' $ALL -Reductio ad absurdum -Proof by contrapositive'}}
DEBUG     Course initialisation: course history: [('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('open_namespace', {'name': 'Logique_propositionnelle', 'pretty_name': ' '}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.tautologie', 'lean_statement': ':\nP → P\n', 'PrettyName': 'Tautologie'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.et_commutatif_I', 'lean_statement': ':\nP ∧ Q → Q ∧ P\n', 'PrettyName': 'Et commutatif i'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.et_commutatif_II', 'lean_statement': ':\nP ∧ Q ↔ Q ∧ P\n', 'PrettyName': 'Et commutatif ii'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.ou_commutatif', 'lean_statement': ':\nP ∨ Q ↔ Q ∨ P\n', 'PrettyName': 'Ou commutatif'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.non_non', 'lean_statement': ':\n¬ ¬ P ↔ P\n', 'PrettyName': 'Non non'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'lean_name': 'exercise.tiers_exclus', 'lean_statement': '(H : R ∧ ¬ R) :\n false\n', 'PrettyName': 'Tiers exclus'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('exercise', {'Tools->ProofTechniques': ' $ALL -Reductio ad absurdum -Proof by contrapositive', 'lean_name': 'exercise.contraposition', 'lean_statement': ':\n(P → Q) ↔ (¬ Q → ¬ P)\n', 'PrettyName': 'Contraposition'}), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('begin_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_proof', None), ('end_of_line', None), ('end_of_line', None), ('end_of_line', None), ('close_namespace', {'name': 'Logique_propositionnelle'}), ('end_of_line', None), ('end_of_line', None), ('close_namespace', {'name': 'course'}), ('end_of_line', None), ('end_of_line', None)]
DEBUG     Course initialisation: Parsing line 2
DEBUG     Course initialisation: Parsing line 3
DEBUG     Course initialisation: Parsing line 4
DEBUG     Course initialisation: Parsing line 5
DEBUG     Course initialisation: Parsing line 6
DEBUG     Course initialisation: Parsing line 7
DEBUG     Course initialisation: Parsing line 8
DEBUG     Course initialisation: Parsing line 9
DEBUG     Course initialisation: Parsing line 10
DEBUG     Course initialisation: Parsing line 11
DEBUG     Course initialisation: Parsing line 12
DEBUG     Course initialisation: Parsing line 13
DEBUG     Course initialisation: Parsing line 14
DEBUG     Course initialisation: Parsing line 15
DEBUG     Course initialisation: Parsing line 16
DEBUG     Course initialisation: Parsing line 17
DEBUG     Course initialisation: Parsing line 18
DEBUG     Course initialisation: Parsing line 19
DEBUG     Course initialisation: Parsing line 20
DEBUG     Course initialisation: Parsing line 21
DEBUG     Course initialisation: Parsing line 22
DEBUG     Course initialisation: Parsing line 23
DEBUG     Course initialisation: Parsing line 24
DEBUG     Course initialisation: Parsing line 25
DEBUG     Course initialisation: Parsing line 26
DEBUG     Course initialisation: Parsing line 27
DEBUG     Course initialisation: Parsing line 28
DEBUG     Course initialisation: Parsing line 29
DEBUG     Course initialisation: Parsing line 30
DEBUG     Course initialisation: namespace Logique_propositionnelle
DEBUG     Course initialisation: Parsing line 31
DEBUG     Course initialisation: Parsing line 32
DEBUG     Course initialisation: Parsing line 33
DEBUG     Course initialisation: Parsing line 34
DEBUG     Course initialisation: Parsing line 35
DEBUG     Course initialisation: Parsing line 36
INFO      Course initialisation: creating exercise from data {'lean_name': 'Logique_propositionnelle.exercise.tautologie', 'lean_statement': ':\nP → P\n', 'PrettyName': 'Tautologie', 'lean_line': 36, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 37
DEBUG     Course initialisation: Parsing line 38
DEBUG     Course initialisation: Parsing line 39
DEBUG     Course initialisation: Parsing line 40
DEBUG     Course initialisation: Parsing line 41
DEBUG     Course initialisation: Parsing line 42
DEBUG     Course initialisation: Parsing line 43
DEBUG     Course initialisation: Parsing line 44
DEBUG     Course initialisation: Parsing line 45
DEBUG     Course initialisation: Parsing line 46
DEBUG     Course initialisation: Parsing line 47
DEBUG     Course initialisation: Parsing line 48
DEBUG     Course initialisation: Parsing line 49
DEBUG     Course initialisation: Parsing line 50
INFO      Course initialisation: creating exercise from data {'lean_name': 'Logique_propositionnelle.exercise.et_commutatif_I', 'lean_statement': ':\nP ∧ Q → Q ∧ P\n', 'PrettyName': 'Et commutatif i', 'lean_line': 50, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 51
DEBUG     Course initialisation: Parsing line 52
DEBUG     Course initialisation: Parsing line 53
DEBUG     Course initialisation: Parsing line 54
DEBUG     Course initialisation: Parsing line 55
DEBUG     Course initialisation: Parsing line 56
DEBUG     Course initialisation: Parsing line 57
INFO      Course initialisation: creating exercise from data {'lean_name': 'Logique_propositionnelle.exercise.et_commutatif_II', 'lean_statement': ':\nP ∧ Q ↔ Q ∧ P\n', 'PrettyName': 'Et commutatif ii', 'lean_line': 57, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 58
DEBUG     Course initialisation: Parsing line 59
DEBUG     Course initialisation: Parsing line 60
DEBUG     Course initialisation: Parsing line 61
DEBUG     Course initialisation: Parsing line 62
DEBUG     Course initialisation: Parsing line 63
DEBUG     Course initialisation: Parsing line 64
INFO      Course initialisation: creating exercise from data {'lean_name': 'Logique_propositionnelle.exercise.ou_commutatif', 'lean_statement': ':\nP ∨ Q ↔ Q ∨ P\n', 'PrettyName': 'Ou commutatif', 'lean_line': 64, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 65
DEBUG     Course initialisation: Parsing line 66
DEBUG     Course initialisation: Parsing line 67
DEBUG     Course initialisation: Parsing line 68
DEBUG     Course initialisation: Parsing line 69
DEBUG     Course initialisation: Parsing line 70
DEBUG     Course initialisation: Parsing line 71
INFO      Course initialisation: creating exercise from data {'lean_name': 'Logique_propositionnelle.exercise.non_non', 'lean_statement': ':\n¬ ¬ P ↔ P\n', 'PrettyName': 'Non non', 'lean_line': 71, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 72
DEBUG     Course initialisation: Parsing line 73
DEBUG     Course initialisation: Parsing line 74
DEBUG     Course initialisation: Parsing line 75
DEBUG     Course initialisation: Parsing line 76
DEBUG     Course initialisation: Parsing line 77
DEBUG     Course initialisation: Parsing line 78
INFO      Course initialisation: creating exercise from data {'lean_name': 'Logique_propositionnelle.exercise.tiers_exclus', 'lean_statement': '(H : R ∧ ¬ R) :\n false\n', 'PrettyName': 'Tiers exclus', 'lean_line': 78, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->ProofTechniques': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques, None
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 79
DEBUG     Course initialisation: Parsing line 80
DEBUG     Course initialisation: Parsing line 81
DEBUG     Course initialisation: Parsing line 82
DEBUG     Course initialisation: Parsing line 83
DEBUG     Course initialisation: Parsing line 84
DEBUG     Course initialisation: Parsing line 85
DEBUG     Course initialisation: Parsing line 86
INFO      Course initialisation: creating exercise from data {'Tools->ProofTechniques': ' $ALL -Reductio ad absurdum -Proof by contrapositive', 'lean_name': 'Logique_propositionnelle.exercise.contraposition', 'lean_statement': ':\n(P → Q) ↔ (¬ Q → ¬ P)\n', 'PrettyName': 'Contraposition', 'lean_line': 86, 'Description': 'NOT PROVIDED', 'text_book_identifier': 'NOT IMPLEMENTED', 'lean_variables': 'NOT IMPLEMENTED', 'Tools->Logic': None, 'Tools->Magic': None, 'Tools->Definitions': None, 'Tools->Theorems': None, 'Tools->Exercises': None, 'Tools->Statements': None}
DEBUG     Course initialisation: processing data in Tools->Definitions, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Theorems, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Exercises, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Statements, $UNTIL_NOW
DEBUG     Course initialisation: processing data in Tools->Logic, None
DEBUG     Course initialisation: found logic names ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 2: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: list 3: ['and', 'or', 'negate', 'implicate', 'iff', 'forall', 'exists', 'apply']
DEBUG     Course initialisation: processing data in Tools->ProofTechniques,  $ALL -Reductio ad absurdum -Proof by contrapositive
DEBUG     Course initialisation: found proofs names ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption']
DEBUG     Course initialisation: list 2: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption', '-Reductio', 'ad', 'absurdum', '-Proof', 'by', 'contrapositive']
WARNING   Course initialisation: Cannot remove item Reductio from list
WARNING   Course initialisation: Cannot remove item Proof from list
DEBUG     Course initialisation: list 3: ['cbr', 'contrapose', 'absurdum', 'choice', 'new_object', 'assumption', 'ad', 'absurdum', 'by', 'contrapositive']
WARNING   Course initialisation: label ad not in proofs  lists
WARNING   Course initialisation: label by not in proofs  lists
WARNING   Course initialisation: label contrapositive not in proofs  lists
DEBUG     Course initialisation: processing data in Tools->Magic, None
DEBUG     Course initialisation: found magic names ['compute']
DEBUG     Course initialisation: list 2: ['compute']
DEBUG     Course initialisation: list 3: ['compute']
DEBUG     Course initialisation: Parsing line 87
DEBUG     Course initialisation: Parsing line 88
DEBUG     Course initialisation: Parsing line 89
DEBUG     Course initialisation: Parsing line 90
DEBUG     Course initialisation: Parsing line 91
DEBUG     Course initialisation: Parsing line 92
DEBUG     Course initialisation: Parsing line 93
DEBUG     Course initialisation: Parsing line 94
DEBUG     Course initialisation: Parsing line 95
DEBUG     Course initialisation: Parsing line 96
DEBUG     Course initialisation: Parsing line 97
DEBUG     Course initialisation: Parsing line 98
DEBUG     Course initialisation: closing namespace Logique_propositionnelle
DEBUG     Course initialisation: Parsing line 99
DEBUG     Course initialisation: Parsing line 100
DEBUG     Course initialisation: (just closing section(?) course)
DEBUG     Course initialisation: Parsing line 101
DEBUG     Course initialisation: Parsing line 102
INFO      Course initialisation: 7 statements, including 7 exercises found by parser
INFO      lean           : Started server
INFO      ServerInterface: Set exercise to: Logique_propositionnelle.exercise.tiers_exclus -> Tiers exclus
DEBUG     lean           : Tx : {"file_name": "Logique_propositionnelle.exercise.tiers_exclus", "content": "-- import data.set\nimport tactic\n\n-- dEAduction imports\nimport structures\nimport definitions\n\n-- General principles :\n-- Type should be defined as parameters, in order to be implicit everywhere\n-- other parameters are implicit in definitions, i.e. defined using '{}' (e.g. {A : set X} )\n-- but explicit everywhere else, i.e. defined using '()' (e.g. (A : set X) )\n-- each definition must be an iff statement (since it will be called with 'rw' or 'symp_rw')\n\n\n\nlocal attribute [instance] classical.prop_decidable\n---------------------------------------------\n-- global parameters = i\u00f9mplicit variables --\n---------------------------------------------\nsection course\nvariables (P Q R: Prop)\n\n/-\n\n-/\n\n------------------\n-- COURSE TITLE --\n------------------\nnamespace Logique_propositionnelle\n/- dEAduction\nPrettyName\n    \n-/\n\nlemma exercise.tautologie :\nP \u2192 P\n:=\nbegin\n    sorry\nend\n\nlemma exercise_et :\nP \u2227 Q \u2192 P\n:=\nbegin\n    sorry\nend\n\nlemma exercise.et_commutatif_I :\nP \u2227 Q \u2192 Q \u2227 P\n:=\nbegin\n    sorry\nend\n\nlemma exercise.et_commutatif_II :\nP \u2227 Q \u2194 Q \u2227 P\n:=\nbegin\n    sorry\nend\n\nlemma exercise.ou_commutatif :\nP \u2228 Q \u2194 Q \u2228 P\n:=\nbegin\n    sorry\nend\n\nlemma exercise.non_non :\n\u00ac \u00ac P \u2194 P\n:=\nbegin\n    sorry\nend\n\nlemma exercise.tiers_exclus\n(H : R \u2227 \u00ac R) :\n false\n:=\nbegin\nhypo_analysis,\ntargets_analysis,\nend\n\nlemma exercise.contraposition :\n(P \u2192 Q) \u2194 (\u00ac Q \u2192 \u00ac P)\n:=\n/- dEAduction\nTools->ProofTechniques\n    $ALL -Reductio ad absurdum -Proof by contrapositive\n-/\nbegin\n    sorry\nend\n\n\nend Logique_propositionnelle\n\nend course\n", "seq_num": 0, "command": "sync"}
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"message":"file invalidated","response":"ok","seq_num":0}
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":180,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":180,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":180,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":180,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":180,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":180,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":180,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":180,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures.lean","pos_col":0,"pos_line":1},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 25","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":25},{"desc":"parsing at line 9","end_pos_col":1,"end_pos_line":180,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures.lean","pos_col":0,"pos_line":9},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 89","end_pos_col":1,"end_pos_line":125,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/definitions.lean","pos_col":0,"pos_line":89},{"desc":"parsing at line 44","end_pos_col":1,"end_pos_line":180,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures.lean","pos_col":0,"pos_line":44},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 44","end_pos_col":1,"end_pos_line":180,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures.lean","pos_col":0,"pos_line":44},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 44","end_pos_col":1,"end_pos_line":180,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures.lean","pos_col":0,"pos_line":44},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 172","end_pos_col":1,"end_pos_line":180,"file_name":"/Users/leroux/Documents/PROGRAMMATION/LEAN/LEAN_TRAVAIL/dEAduction/share/lean_src/structures.lean","pos_col":0,"pos_line":172},{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":true,"response":"current_tasks","tasks":[{"desc":"parsing at line 1","end_pos_col":1,"end_pos_line":102,"file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":1}]}
DEBUG     lean           : Updating lean running state : True
INFO      ServerInterface: New lean state: True
DEBUG     lean           : Rx: {"is_running":false,"response":"current_tasks","tasks":[]}
DEBUG     lean           : Updating lean running state : False
INFO      ServerInterface: New lean state: False
DEBUG     lean           : Rx: {"msgs":[{"caption":"","file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":36,"severity":"warning","text":"declaration 'Logique_propositionnelle.exercise.tautologie' uses sorry"},{"caption":"","file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":43,"severity":"warning","text":"declaration 'Logique_propositionnelle.exercise_et' uses sorry"},{"caption":"","file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":50,"severity":"warning","text":"declaration 'Logique_propositionnelle.exercise.et_commutatif_I' uses sorry"},{"caption":"","file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":57,"severity":"warning","text":"declaration 'Logique_propositionnelle.exercise.et_commutatif_II' uses sorry"},{"caption":"","file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":64,"severity":"warning","text":"declaration 'Logique_propositionnelle.exercise.ou_commutatif' uses sorry"},{"caption":"","file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":71,"severity":"warning","text":"declaration 'Logique_propositionnelle.exercise.non_non' uses sorry"},{"caption":"trace output","file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":83,"severity":"information","text":"context:\nOBJECT[LOCAL_CONSTANT¿[name:R/identifier:0._fresh.14.525¿]¿(CONSTANT¿[name:1/1¿]¿)] ¿= PROP\nPROPERTY[LOCAL_CONSTANT¿[name:H/identifier:0._fresh.14.531¿]¿(CONSTANT¿[name:1/1¿]¿)/pp_type: R ∧ ¬R] ¿= PROP_AND¿(LOCAL_CONSTANT¿[name:R/identifier:0._fresh.14.525¿]¿(CONSTANT¿[name:1/1¿]¿)¿, PROP_NOT¿(LOCAL_CONSTANT¿[name:R/identifier:0._fresh.14.525¿]¿(CONSTANT¿[name:1/1¿]¿)¿)¿)\n"},{"caption":"trace output","file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":84,"severity":"information","text":"targets:\nPROPERTY[METAVAR[_mlocal._fresh.15.700]/pp_type: false] ¿= PROP_FALSE\n"},{"caption":"","file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":85,"severity":"error","text":"tactic failed, there are unsolved goals\nstate:\nR : Prop,\nH : R ∧ ¬R\n⊢ false"},{"caption":"","file_name":"Logique_propositionnelle.exercise.tiers_exclus","pos_col":0,"pos_line":87,"severity":"warning","text":"declaration 'Logique_propositionnelle.exercise.contraposition' uses sorry"}],"response":"all_messages"}
WARNING   ServerInterface: Lean warning at line 36: declaration 'Logique_propositionnelle.exercise.tautologie' uses sorry
WARNING   ServerInterface: Lean warning at line 43: declaration 'Logique_propositionnelle.exercise_et' uses sorry
WARNING   ServerInterface: Lean warning at line 50: declaration 'Logique_propositionnelle.exercise.et_commutatif_I' uses sorry
WARNING   ServerInterface: Lean warning at line 57: declaration 'Logique_propositionnelle.exercise.et_commutatif_II' uses sorry
WARNING   ServerInterface: Lean warning at line 64: declaration 'Logique_propositionnelle.exercise.ou_commutatif' uses sorry
WARNING   ServerInterface: Lean warning at line 71: declaration 'Logique_propositionnelle.exercise.non_non' uses sorry
INFO      ServerInterface: Got new context
INFO      ServerInterface: Got new targets
ERROR     ServerInterface: Lean error at line 85: tactic failed, there are unsolved goals
state:
R : Prop,
H : R ∧ ¬R
⊢ false
WARNING   ServerInterface: Lean warning at line 87: declaration 'Logique_propositionnelle.exercise.contraposition' uses sorry
DEBUG     ServerInterface: Proof received
